#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: http://mirrors.slickstack.io/crons/08-cron-daily.txt ##################################
#### path: /var/www/crons/08-cron-daily ############################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: SlickStack core cron job *daily* (08/13) will run every 1 day ########################
#### module version: Ubuntu 20.04 LTS ##############################################################
#### sourced by: root crontab ######################################################################
#### bash aliases: ss cron daily ###################################################################
####################################################################################################

## NEVER MODIFY THE ROOT CRONTAB OR SS CORE CRON JOBS OR YOUR STACK WILL STOP WORKING ##
## INSTEAD ADJUST SS_INTERVAL SETTINGS IN SS-CONFIG OR EDIT CUSTOM CRON FILES ##

####################################################################################################
#### 08-Cron-Daily: Validate (Restore) SS-Config ###################################################
####################################################################################################

## SNIPPET: ss core cron jobs

## this attempts to restore missing or damaged ss-config using a recent intact backup ##
## however it is not fool-proof since there is no way to verify all settings ##

## validate ss-config ##
VALIDATE_SS_CONFIG=$(grep 'SS_BUILD' /var/www/ss-config)
if [[ -z "$VALIDATE_SS_CONFIG" ]]; then
    SS_CONFIG_RECENT_BACKUPS=$(ls -1rta /var/www/meta/ss-config.bak* | tail -n1)
    SS_CONFIG_BEST_MATCH=$(grep -il 'SS_BUILD' "$SS_CONFIG_RECENT_BACKUPS")
    rm -rf /tmp/ss-config
    mv -f "$SS_CONFIG_BEST_MATCH" /tmp/ss-config
    VALIDATE_TMP_SS_CONFIG=$(grep 'SS_BUILD' /tmp/ss-config)
    if [[ -n "$VALIDATE_TMP_SS_CONFIG" ]]; then
        mv -f /tmp/ss-config /var/www/ss-config
        chown root:root /var/www/ss-config ## must be root:root
        chmod 0700 /var/www/ss-config ## 0700 means root can execute
    fi
    rm -rf /tmp/ss-config
fi

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS

####################################################################################################
#### 08-Cron-Daily: Validate (Restore) SS-Functions ################################################
####################################################################################################

## SNIPPET: ss core cron jobs

## this attempts to restore missing or damaged ss-functions from our public mirrors ##
## we perform this check before cron job tasks as they rely on ss-functions ##

## validate ss-functions ##
VALIDATE_SS_FUNCTIONS=$(grep 'SS_EOF' /var/www/ss-functions)
if [[ -z "$VALIDATE_SS_FUNCTIONS" ]]; then
    rm -rf /tmp/ss-functions
    wget -q -4 -t 1 -T 15 -O /tmp/ss-functions http://mirrors.slickstack.io/bash/ss-functions.txt
    VALIDATE_TMP_SS_FUNCTIONS=$(grep 'SS_EOF' /tmp/ss-functions)
    if [[ -n "$VALIDATE_TMP_SS_FUNCTIONS" ]]; then
        mv -f /tmp/ss-functions /var/www/ss-functions
        chown root:root /var/www/ss-functions ## must be root:root
        chmod 0700 /var/www/ss-functions ## 0700 means root can execute
    else
        wget --no-check-certificate -q -4 -t 3 -T 30 -O /tmp/ss-functions https://raw.githubusercontent.com/littlebizzy/slickstack/master/bash/ss-functions.txt
        mv -f /tmp/ss-functions /var/www/ss-functions
        chown root:root /var/www/ss-functions ## must be root:root
        chmod 0700 /var/www/ss-functions ## 0700 means root can execute
    fi
    rm -rf /tmp/ss-functions
fi

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS

####################################################################################################
#### 08-Cron-Daily: Validate (Restore) SS-Check + SS-Worker ########################################
####################################################################################################

## SNIPPET: ss core cron jobs

## this attempts to restore missing or damaged ss-check and ss-worker bash scripts ##
## they are critical to maintenance tasks and keeping ss core files updated ##

## constants ##
VALIDATE_SS_CHECK=$(grep 'SS_EOF' /var/www/ss-check)
VALIDATE_TMP_SS_CHECK=$(grep 'SS_EOF' /tmp/ss-check)
VALIDATE_SS_WORKER=$(grep 'SS_EOF' /var/www/ss-worker)
VALIDATE_TMP_SS_WORKER=$(grep 'SS_EOF' /tmp/ss-worker)

## validate ss-check ##
if [[ -z "$VALIDATE_SS_CHECK" ]]; then
    rm -rf /tmp/ss-check
    wget -q -4 -t 1 -T 15 -O /tmp/ss-check http://mirrors.slickstack.io/bash/ss-check.txt
    if [[ -n "$VALIDATE_TMP_SS_CHECK" ]]; then
        mv -f /tmp/ss-check /var/www/ss-check
        chown root:root /var/www/ss-check ## must be root:root
        chmod 0700 /var/www/ss-check ## 0700 means root can execute
    else
        wget --no-check-certificate -q -4 -t 3 -T 30 -O /tmp/ss-check https://raw.githubusercontent.com/littlebizzy/slickstack/master/bash/ss-check.txt
        mv -f /tmp/ss-check /var/www/ss-check
        chown root:root /var/www/ss-check ## must be root:root
        chmod 0700 /var/www/ss-check ## 0700 means root can execute
    fi
    rm -rf /tmp/ss-check
fi

## validate ss-worker ##
if [[ -z "$VALIDATE_SS_WORKER" ]]; then
    rm -rf /tmp/ss-worker
    wget -q -4 -t 1 -T 15 -O /tmp/ss-worker http://mirrors.slickstack.io/bash/ss-worker.txt
    if [[ -n "$VALIDATE_TMP_SS_WORKER" ]]; then
        mv -f /tmp/ss-worker /var/www/ss-worker
        chown root:root /var/www/ss-worker ## must be root:root
        chmod 0700 /var/www/ss-worker ## 0700 means root can execute
    else
        wget --no-check-certificate -q -4 -t 3 -T 30 -O /tmp/ss-worker https://raw.githubusercontent.com/littlebizzy/slickstack/master/bash/ss-worker.txt
        mv -f /tmp/ss-worker /var/www/ss-worker
        chown root:root /var/www/ss-worker ## must be root:root
        chmod 0700 /var/www/ss-worker ## 0700 means root can execute
    fi
    rm -rf /tmp/ss-worker
fi

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS

####################################################################################################
#### 08-Cron-Daily: Source SS-Config + SS-Functions (After Validated) ##############################
####################################################################################################

## at this point we know that ss-config and ss-functions exist or have been restored ##
## so we source them now to carry on with custom and scheduled cron job tasks ##

## source ss-config ##
source /var/www/ss-config

## source ss-functions ##
source /var/www/ss-functions

## BELOW THIS RELIES ON SS-CONFIG AND SS-FUNCTIONS

####################################################################################################
#### 08-Cron-Daily: Run Custom Tasks (EDIT SOURCED FILES) ##########################################
####################################################################################################

## this will run custom shell commands that you can save in a reserved filename below ##
## carefully consider server resources and best practices before customizing ##

## run 08-cron-daily-custom ##
source "$PATH_08_CRON_DAILY_CUSTOM"

####################################################################################################
#### 08-Cron-Daily: Run Scheduled Tasks ############################################################
####################################################################################################

## the below tasks will be called if configured to run at this interval in ss-config ##
## certain tasks are automatically called if the relevant interval is missing ##

## run ss-dump-database if set to daily ##
if [[ "$SS_INTERVAL_DUMP_DATABASE" == "daily" ]]; then 
    source /var/www/ss-dump-database
fi

## run ss-clean-files if set to daily ##
if [[ "$SS_INTERVAL_CLEAN_FILES" == "daily" ]]; then 
    source /var/www/ss-clean-files
fi

## run ss-install-wordpress-config if set to daily ##
if [[ "$SS_INTERVAL_INSTALL_WORDPRESS_CONFIG" == "daily" ]]; then 
    source /var/www/ss-install-wordpress-config
fi

## run ss-sync-staging if set to daily ##
if [[ "$SS_INTERVAL_SYNC_STAGING" == "daily" ]]; then 
    source /var/www/ss-sync-staging
fi

## run ss-install-wordpress-mu-plugins if set to daily or if not defined (default) ##
if [[ "$SS_INTERVAL_INSTALL_WORDPRESS_MU_PLUGINS" == "daily" || -z "$SS_INTERVAL_INSTALL_WORDPRESS_MU_PLUGINS" ]]; then 
    source /var/www/ss-install-wordpress-mu-plugins
fi

## run ss-perms if set to daily ##
if [[ "$SS_INTERVAL_PERMS" == "daily" ]]; then 
    source /var/www/ss-perms
fi

## run ss-dos2unix if set to daily ##
if [[ "$SS_INTERVAL_DOS2UNIX" == "daily" ]]; then 
    source /var/www/ss-dos2unix
fi

## run ss-scan-malware if set to daily ##
if [[ "$SS_INTERVAL_SCAN_MALWARE" == "daily" ]]; then 
    source /var/www/ss-scan-malware
fi

## run ss-optimize-database if set to daily ##
if [[ "$SS_INTERVAL_OPTIMIZE_DATABASE" == "daily" ]]; then 
    source /var/www/ss-optimize-database
fi

## run ss-purge if set to daily ##
if [[ "$SS_INTERVAL_PURGE" == "daily" ]]; then 
    source /var/www/ss-purge
fi

## run ss-install-ubuntu-crontab if set to daily ##
if [[ "$SS_INTERVAL_INSTALL_UBUNTU_CRONTAB" == "daily" ]]; then 
    source /var/www/ss-install-ubuntu-crontab
fi

## run ss-install-ubuntu-bash if set to daily ##
if [[ "$SS_INTERVAL_INSTALL_UBUNTU_BASH" == "daily" ]]; then 
    source /var/www/ss-install-ubuntu-bash
fi

####################################################################################################
#### 08-Cron-Daily: Reset Permissions (SS Core Bash Scripts + SS Core Cron Jobs) ###################
####################################################################################################

## SNIPPET: ss-check, ss-worker, ss core cron jobs

## we hardcode this permissions reset snippet into all ss core scripts for redundancy ##
## chmod 0700 means only the root/sudo users can execute the ss core scripts ##

## reset permissions ##
chown root:root /var/www/ss* ## must be root:root
chown root:root /var/www/crons/*cron* ## must be root:root
chmod 0700 /var/www/ss* ## 0700 means root can execute
chmod 0700 /var/www/crons/*cron* ## 0700 means root can execute

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS

####################################################################################################
#### 08-Cron-Daily: Delete Lock File ###############################################################
####################################################################################################

## here we delete the lock file associated with this cron job to clear the cron queue ##
## this is technically not necessary but we do it anyway for extra security ##

## delete lock ##
rm "$LOCK_08_CRON_DAILY"

####################################################################################################
#### 08-Cron-Daily: Touch Timestamp File (End Script) ##############################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

## script timestamp ##
touch "$TIMESTAMP_08_CRON_DAILY"

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://bash.cyberciti.biz/guide/Setting_up_permissions_on_a_script
## Ref: https://stackoverflow.com/questions/22861580/bash-script-check-if-a-file-contains-a-specific-line
## Ref: https://stackoverflow.com/questions/4749330/how-to-test-if-string-exists-in-file-with-bash/14201583
## Ref: https://stackoverflow.com/questions/11287861/how-to-check-if-a-file-contains-a-specific-string-using-bash
## Ref: https://stackoverflow.com/questions/4749330/how-to-test-if-string-exists-in-file-with-bash-
## Ref: https://stackoverflow.com/questions/42377739/while-file-doesnt-contain-string-bash

## SS_EOF
