#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: http://mirrors.slickstack.io/crons/13-cron-sometimes.txt ##############################
#### path: /var/www/crons/13-cron-sometimes ########################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: SlickStack core cron job *sometimes* (13/13) will run every ~2 months ################
#### module version: Ubuntu 20.04 LTS ##############################################################
#### sourced by: root crontab ######################################################################
#### bash aliases: ss cron sometimes ###############################################################
####################################################################################################

## NEVER MODIFY THE ROOT CRONTAB AND SS CORE CRON JOBS OR YOUR STACK WILL STOP WORKING ##
## INSTEAD CUSTOMIZE SS_INTERVAL SETTINGS OR ADD CUSTOM JOBS IN YOUR SS-CONFIG ##

## include SlickStack configuration ##
source /var/www/ss-config

## include SlickStack functions ##
source /var/www/ss-functions

####################################################################################################
#### 13-Cron-Sometimes: Ensure SS-Check + SS-Worker (Core Bash Scripts) Intact #####################
####################################################################################################

## SNIPPET: ss core cron jobs

## this improves redundancy by having ss core cron jobs ensure ss core bash scripts exist ##
## the root crontab in SlickStack likewise ensures that ss core cron jobs exist ##

## ensure ss-check exists and intact ##
FILE_SS_CHECK="/var/www/ss-check"
STRING_SS_CHECK="SS_EOF"
if [[ ! -f "$FILE_SS_CHECK" ]] || [[ -z $(grep -q "$STRING_SS_CHECK" "$FILE_SS_CHECK") ]]; then
    rm /tmp/ss-check*
    wget -O /tmp/ss-check http://mirrors.slickstack.io/ss-check.txt
    cp /tmp/ss-check /var/www/ss-check
    cp /tmp/ss-check /var/www/bash/ss-check
    chown root:root /var/www/ss-check ## must be root:root
    chown root:root /var/www/bash/ss-check ## must be root:root
    chmod 0700 /var/www/ss-check ## 0700 means root can execute
    chmod 0700 /var/www/bash/ss-check ## 0700 means root can execute
    rm /tmp/ss-check*
fi

## ensure ss-worker exists and intact ##
FILE_SS_WORKER="/var/www/ss-worker"
STRING_SS_WORKER="SS_EOF"
if [[ ! -f "$FILE_SS_WORKER" ]] || [[ -z $(grep -q "$STRING_SS_WORKER" "$FILE_SS_WORKER") ]]; then
    rm /tmp/ss-worker*
    wget -O /tmp/ss-worker http://mirrors.slickstack.io/ss-worker.txt
    cp /tmp/ss-worker /var/www/ss-worker
    cp /tmp/ss-worker /var/www/bash/ss-worker
    chown root:root /var/www/ss-worker ## must be root:root
    chown root:root /var/www/bash/ss-worker ## must be root:root
    chmod 0700 /var/www/ss-worker ## 0700 means root can execute
    chmod 0700 /var/www/bash/ss-worker ## 0700 means root can execute
    rm /tmp/ss-worker*
fi

####################################################################################################
#### 13-Cron-Sometimes: Run Scheduled Tasks ########################################################
####################################################################################################

## the below tasks will be called if configured to run at this interval in ss-config ##
## certain tasks are automatically called if the relevant interval is missing ##

## run custom cron jobs ##
if [[ -n "$SS_CUSTOM_CRON_SOMETIMES" ]]; then 
    echo "$SS_CUSTOM_CRON_SOMETIMES"
fi

## run ss-install-wordpress-core if set to sometimes or if not defined (default) ##
if [[ "$SS_INTERVAL_INSTALL_WORDPRESS_CORE" == "sometimes" || -z "$SS_INTERVAL_INSTALL_WORDPRESS_CORE" ]]; then 
    source /var/www/ss-install-wordpress-core
fi

## run ss-install-php if set to sometimes ##
if [[ "$SS_INTERVAL_INSTALL_PHP" == "sometimes" ]]; then 
    source /var/www/ss-install-php
fi

## run ss-install-redis if set to sometimes ##
if [[ "$SS_INTERVAL_INSTALL_REDIS" == "sometimes" ]]; then 
    source /var/www/ss-install-redis
fi

## run ss-install-mysql if set to sometimes ##
if [[ "$SS_INTERVAL_INSTALL_MYSQL" == "sometimes" ]]; then 
    source /var/www/ss-install-mysql
fi

## run ss-install-nginx if set to sometimes ##
if [[ "$SS_INTERVAL_INSTALL_NGINX" == "sometimes" ]]; then 
    source /var/www/ss-install-nginx
fi

## run ss-encrypt if set to sometimes or if not defined (default) ##
if [[ "$SS_INTERVAL_ENCRYPT" == "sometimes" || -z "$SS_INTERVAL_ENCRYPT" ]]; then 
    source /var/www/ss-encrypt
fi

## run ss-install-adminer if set to sometimes ##
if [[ "$SS_INTERVAL_INSTALL_ADMINER" == "sometimes" ]]; then 
    source /var/www/ss-install-adminer
fi

## run ss-purge if set to sometimes ##
if [[ "$SS_INTERVAL_PURGE" == "sometimes" ]]; then 
    source /var/www/ss-purge
fi

## run ss-install-clamav if set to sometimes ##
if [[ "$SS_INTERVAL_INSTALL_CLAMAV" == "sometimes" ]]; then 
    source /var/www/ss-install-clamav
fi

## run ss-update if set to sometimes or if not defined (default) ##
if [[ "$SS_INTERVAL_UPDATE" == "sometimes" || -z "$SS_INTERVAL_UPDATE" ]]; then 
    source /var/www/ss-update
fi

## run ss-reboot if set to sometimes ##
if [[ "$SS_INTERVAL_REBOOT" == "sometimes" ]]; then 
    source /var/www/ss-reboot
fi

####################################################################################################
#### 13-Cron-Sometimes: Reset Permissions (SS Core Bash Scripts) ###################################
####################################################################################################

## SNIPPET: ss core cron jobs

## we hardcode this permissions reset snippet into ss core cron jobs for redundancy ##
## chmod 700 means only the root/sudo users can execute ss core bash scripts ##

## reset permissions ##
chown root:root /var/www/ss* ## must be root:root
chmod 0700 /var/www/ss* ## 0700 means root can execute

chown root:root /var/www/bash/ss* ## must be root:root
chmod 0700 /var/www/bash/ss* ## 0700 means root can execute

####################################################################################################
#### 13-Cron-Sometimes: Delete Lock File ###########################################################
####################################################################################################

## here we delete the lock file associated with this cron job to clear the cron queue ##
## this is technically not necessary but we do it anyway for extra security ##

## delete lock file ##
rm /tmp/13-cron-sometimes*.lock*

####################################################################################################
#### 13-Cron-Sometimes: Touch Timestamp File (End Script) ##########################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

## script timestamp ##
touch /var/www/meta/.timestamp-13-cron-sometimes

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://bash.cyberciti.biz/guide/Setting_up_permissions_on_a_script
## Ref: https://stackoverflow.com/questions/22861580/bash-script-check-if-a-file-contains-a-specific-line
## Ref: https://stackoverflow.com/questions/4749330/how-to-test-if-string-exists-in-file-with-bash/14201583
## Ref: https://stackoverflow.com/questions/11287861/how-to-check-if-a-file-contains-a-specific-string-using-bash
## Ref: https://stackoverflow.com/questions/4749330/how-to-test-if-string-exists-in-file-with-bash-
## Ref: https://stackoverflow.com/questions/42377739/while-file-doesnt-contain-string-bash

## SS_EOF
