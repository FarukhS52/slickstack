#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: http://mirrors.slickstack.io/crons/01-cron-often.txt ##################################
#### path: /var/www/crons/01-cron-often ############################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: SlickStack core cron job *often* (01/13) will run every ~3 minutes ###################
#### module version: Ubuntu 20.04 LTS ##############################################################
#### sourced by: root crontab ######################################################################
#### bash aliases: ss cron often ###################################################################
####################################################################################################

## NEVER MODIFY THE ROOT CRONTAB OR SS CORE CRON JOBS OR YOUR STACK WILL STOP WORKING ##
## INSTEAD ADJUST SS_INTERVAL SETTINGS IN SS-CONFIG OR EDIT CUSTOM CRON FILES ##

## critical constants ##
XXX_PATH_SS_CONFIG="/var/www/ss-config"
XXX_PATH_SS_FUNCTIONS="/var/www/ss-functions"
XXX_TMP_SS_CONFIG="/tmp/ss-config"
XXX_TMP_SS_FUNCTIONS="/tmp/ss-functions"

## big bang ##
source "$XXX_PATH_SS_CONFIG"
source "$XXX_PATH_SS_FUNCTIONS"

####################################################################################################
#### 01-Cron-Often: Validate/Restore SS-Config #####################################################
####################################################################################################

## SNIPPET: 

## this attempts to restore missing or damaged ss-config using a recent intact backup ##
## however it is not fool-proof since there is no way to verify all settings ##

## snippet constants ##
XXX_STRING_VALIDATE_SS_CONFIG="SS_BUILD"
XXX_VALIDATE_SS_CONFIG=$(grep "$XXX_STRING_VALIDATE_SS_CONFIG" "$XXX_PATH_SS_CONFIG")
XXX_VALIDATE_TMP_SS_CONFIG=$(grep "$XXX_STRING_VALIDATE_SS_CONFIG" "$XXX_TMP_SS_CONFIG")
XXX_SS_CONFIG_RECENT_BACKUPS=$(ls -1rta /var/www/meta/ss-config.bak* | tail -n1)
XXX_SS_CONFIG_BEST_MATCH=$(grep -il "$XXX_STRING_VALIDATE_SS_CONFIG" "$XXX_SS_CONFIG_RECENT_BACKUPS")

## validate ss-config ##
if [[ -z "$XXX_VALIDATE_SS_CONFIG" ]]; then
    rm "$XXX_TMP_SS_CONFIG"
    mv "$XXX_SS_CONFIG_BEST_MATCH" "$XXX_TMP_SS_CONFIG"
    if [[ -n "$XXX_VALIDATE_TMP_SS_CONFIG" ]]; then
        mv "$XXX_TMP_SS_CONFIG" "$XXX_PATH_SS_CONFIG"
        chown root:root "$XXX_PATH_SS_CONFIG" ## must be root:root
        chmod 0700 "$XXX_PATH_SS_CONFIG" ## 0700 means root can execute
    fi
    rm "$XXX_TMP_SS_CONFIG"
fi

####################################################################################################
#### 01-Cron-Often: Validate/Restore SS-Functions ##################################################
####################################################################################################

## SNIPPET: 

## runs first since ss core cron jobs and ss core bash scripts depend on ss-functions ##
## if ss-functions is missing or damanaged this snippet will reinstall again ##

## validate ss-functions ##
XXX_VALIDATE_SS_FUNCTIONS=$(grep 'SS_EOF' "$XXX_PATH_SS_FUNCTIONS")
XXX_VALIDATE_TMP_SS_FUNCTIONS=$(grep 'SS_EOF' "$XXX_TMP_SS_FUNCTIONS")
if [[ -z "$XXX_VALIDATE_SS_FUNCTIONS" ]]; then
    rm "$XXX_TMP_SS_FUNCTIONS"
    wget -O "$XXX_TMP_SS_FUNCTIONS" http://mirrors.slickstack.io/bash/ss-functions.txt
    if [[ -n "$XXX_VALIDATE_TMP_SS_FUNCTIONS" ]]; then
        cp "$XXX_TMP_SS_FUNCTIONS" "$XXX_PATH_SS_FUNCTIONS"
        chown root:root "$XXX_PATH_SS_FUNCTIONS" ## must be root:root
        chmod 0700 "$XXX_PATH_SS_FUNCTIONS" ## 0700 means root can execute
    fi
    rm "$XXX_TMP_SS_FUNCTIONS"
fi

####################################################################################################
#### 01-Cron-Often: Validate/Restore SS-Check + SS-Worker ##########################################
####################################################################################################

## SNIPPET: ss core cron jobs

## this snippet ensures ss-check and ss-worker (critical bash scripts) exist properly ##
## if either file is missing or damaged this snippet will reinstall them again ##

## validate ss-check ##
if [[ -z "$VALIDATE_SS_CHECK" ]]; then
    rm "$TMP_SS_CHECK"
    wget -O "$TMP_SS_CHECK" "$MIRROR_SS_CHECK"
    if [[ -n "$VALIDATE_TMP_SS_CHECK" ]]; then
        cp "$TMP_SS_CHECK" "$PATH_SS_CHECK"
        chown root:root "$PATH_SS_CHECK" ## must be root:root
        chmod 0700 "$PATH_SS_CHECK" ## 0700 means root can execute
    fi
    rm "$TMP_SS_CHECK"
fi

## validate ss-worker ##
if [[ -z "$VALIDATE_SS_WORKER" ]]; then
    rm "$TMP_SS_WORKER"
    wget -O "$TMP_SS_WORKER" "$MIRROR_SS_WORKER"
    if [[ -n "$VALIDATE_TMP_SS_WORKER" ]]; then
        cp "$TMP_SS_WORKER" "$PATH_SS_WORKER"
        chown root:root "$PATH_SS_WORKER" ## must be root:root
        chmod 0700 "$PATH_SS_WORKER" ## 0700 means root can execute
    fi
    rm "$TMP_SS_WORKER"
fi

####################################################################################################
#### 01-Cron-Often: Run Custom Tasks ###############################################################
####################################################################################################

## this will run custom shell commands that you can save in a reserved filename below ##
## carefully consider server resources and best practices before customizing ##

## run custom cron jobs ##
source "$PATH_CRON_OFTEN_CUSTOM"

####################################################################################################
#### 01-Cron-Often: Run Scheduled Tasks ############################################################
####################################################################################################

## the below tasks will be called if configured to run at this interval in ss-config ##
## certain tasks are automatically called if the relevant interval is missing ##

## run ss-check if set to often ##
if [[ "$SS_INTERVAL_CHECK" == "often" ]]; then 
    source /var/www/ss-check
fi

## run ss-dump-database if set to often ##
if [[ "$SS_INTERVAL_DUMP_DATABASE" == "often" ]]; then 
    source /var/www/ss-dump-database
fi

####################################################################################################
#### 01-Cron-Often: Reset Permissions (SS Core Bash Scripts + SS Core Cron Jobs) ###################
####################################################################################################

## SNIPPET: ss-check, ss-worker, ss core cron jobs

## we hardcode this permissions reset snippet into all ss core scripts for redundancy ##
## chmod 0700 means only the root/sudo users can execute the ss core scripts ##

## reset permissions ##
chown root:root /var/www/ss* ## must be root:root
chown root:root /var/www/crons/*cron* ## must be root:root
chmod 0700 /var/www/ss* ## 0700 means root can execute
chmod 0700 /var/www/crons/*cron* ## 0700 means root can execute

####################################################################################################
#### 01-Cron-Often: Delete Lock File ###############################################################
####################################################################################################

## here we delete the lock file associated with this cron job to clear the cron queue ##
## this is technically not necessary but we do it anyway for extra security ##

## delete lock file ##
rm /tmp/01-cron-often*.lock*

####################################################################################################
#### 01-Cron-Often: Touch Timestamp File (End Script) ##############################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

## script timestamp ##
touch /var/www/meta/.timestamp-01-cron-often

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://bash.cyberciti.biz/guide/Setting_up_permissions_on_a_script
## Ref: https://stackoverflow.com/questions/22861580/bash-script-check-if-a-file-contains-a-specific-line
## Ref: https://stackoverflow.com/questions/4749330/how-to-test-if-string-exists-in-file-with-bash/14201583
## Ref: https://stackoverflow.com/questions/11287861/how-to-check-if-a-file-contains-a-specific-string-using-bash
## Ref: https://stackoverflow.com/questions/4749330/how-to-test-if-string-exists-in-file-with-bash-
## Ref: https://stackoverflow.com/questions/42377739/while-file-doesnt-contain-string-bash
## Ref: https://stackoverflow.com/questions/29378566/i-just-assigned-a-variable-but-echo-variable-shows-something-else
## Ref: https://fluentcrm.com/docs/replace-wordpress-cron-with-a-real-cron-job/
## Ref: https://stackoverflow.com/questions/18656678/how-to-get-path-of-the-php-binary-on-server-where-it-is-located
## Ref: https://tldp.org/LDP/abs/html/nestedifthen.html
## Ref: https://unix.stackexchange.com/questions/282901/find-latest-file-created-in-folder-and-grep-contents
## Ref: https://serverfault.com/questions/69283/when-to-use-single-quote-double-quote-in-grep
## Ref: https://unix.stackexchange.com/questions/277412/cp-vs-mv-which-operation-is-more-efficient

## NOTE: VARIABLES WITH $XXX_ PREFIX USED BY THIS SCRIPT ONLY

## SS_EOF
