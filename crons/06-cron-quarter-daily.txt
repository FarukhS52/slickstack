#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: http://mirrors.slickstack.io/crons/06-cron-quarter-daily.txt ##########################
#### path: /var/www/crons/06-cron-quarter-daily ####################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: SlickStack core cron job *quarter-daily* (06/13) will run every 6 hours ##############
#### module version: Ubuntu 20.04 LTS ##############################################################
#### sourced by: root crontab ######################################################################
#### bash aliases: ss cron quarter daily ###########################################################
####################################################################################################

## NEVER MODIFY THE ROOT CRONTAB AND SS CORE CRON JOBS OR YOUR STACK WILL STOP WORKING ##
## INSTEAD CUSTOMIZE SS_INTERVAL SETTINGS OR ADD CUSTOM JOBS IN YOUR SS-CONFIG ##

## include SlickStack configuration ##
source /var/www/ss-config

## include SlickStack functions ##
source /var/www/ss-functions

####################################################################################################
#### 06-Cron-Quarter-Daily: Ensure SS-Check + SS-Worker Intact (Core Bash Scripts) #################
####################################################################################################

## SNIPPET: ss core cron jobs

## this improves redundancy by having ss core cron jobs ensure ss core bash scripts exist ##
## the root crontab in SlickStack likewise ensures that ss core cron jobs exist ##

## ensure ss-check exists and intact ##
if [[ ! -f "$PATH_SS_CHECK" ]] || [[ -z $(grep -q "$SS_EOF" "$PATH_SS_CHECK") ]]; then
    rm /tmp/ss-check*
    wget -O /tmp/ss-check "$MIRROR_SS_CHECK"
    cp /tmp/ss-check /var/www/ss-check
    chown root:root /var/www/ss-check ## must be root:root
    chmod 0700 /var/www/ss-check ## 0700 means root can execute
    rm /tmp/ss-check*
fi

## ensure ss-worker exists and intact ##
if [[ ! -f "$PATH_SS_WORKER" ]] || [[ -z $(grep -q "$SS_EOF" "$PATH_SS_WORKER") ]]; then
    rm /tmp/ss-worker*
    wget -O /tmp/ss-worker "$MIRROR_SS_WORKER"
    cp /tmp/ss-worker /var/www/ss-worker
    chown root:root /var/www/ss-worker ## must be root:root
    chmod 0700 /var/www/ss-worker ## 0700 means root can execute
    rm /tmp/ss-worker*
fi

####################################################################################################
#### 06-Cron-Quarter-Daily: Run Custom Tasks #######################################################
####################################################################################################

## this will run custom shell commands that you can save to a reserved filename below ##
## carefully consider server resources and best practices before activating ##

## run custom cron jobs ##
SS_CUSTOM_CRON_QUARTER_DAILY_NOW=$(source /var/www/ss-config; echo $SS_CUSTOM_CRON_QUARTER_DAILY)
if [[ -n "$SS_CUSTOM_CRON_QUARTER_DAILY" ]]; then 
    $SS_CUSTOM_CRON_QUARTER_DAILY_NOW
fi

## run custom cron jobs ##
if [[ -f "$PATH_CRON_QUARTER_DAILY_CUSTOM" ]]; then
    source "$PATH_CRON_QUARTER_DAILY_CUSTOM"
fi

####################################################################################################
#### 06-Cron-Quarter-Daily: Run Scheduled Tasks ####################################################
####################################################################################################

## the below tasks will be called if configured to run at this interval in ss-config ##
## certain tasks are automatically called if the relevant interval is missing ##

## run wp-cron if set to quarter-daily ##
if [[ "$WP_CRON_METHOD" == "server" ]] && [[ "$WP_CRON_INTERVAL" == "quarter-daily" ]]; then 
    /usr/bin/php /var/www/html/wp-cron.php
fi

## run ss-worker if set to quarter-daily ##
if [[ "$SS_INTERVAL_WORKER" == "quarter-daily" ]]; then 
    source /var/www/ss-worker
fi

## run ss-dump-database if set to quarter-daily ##
if [[ "$SS_INTERVAL_DUMP_DATABASE" == "quarter-daily" ]]; then 
    source /var/www/ss-dump-database
fi

## run ss-clean-files if set to quarter-daily ##
if [[ "$SS_INTERVAL_CLEAN_FILES" == "quarter-daily" ]]; then 
    source /var/www/ss-clean-files
fi

## run ss-install-wordpress-config if set to quarter-daily ##
if [[ "$SS_INTERVAL_INSTALL_WORDPRESS_CONFIG" == "quarter-daily" ]]; then 
    source /var/www/ss-install-wordpress-config
fi

## run ss-sync-staging if set to quarter-daily ##
if [[ "$SS_INTERVAL_SYNC_STAGING" == "quarter-daily" ]]; then 
    source /var/www/ss-sync-staging
fi

## run ss-install-wordpress-mu-plugins if set to quarter-daily ##
if [[ "$SS_INTERVAL_INSTALL_WORDPRESS_MU_PLUGINS" == "quarter-daily" ]]; then 
    source /var/www/ss-install-wordpress-mu-plugins
fi

## run ss-perms if set to quarter-daily or if not defined (default) ##
if [[ "$SS_INTERVAL_PERMS" == "quarter-daily" || -z "$SS_INTERVAL_PERMS" ]]; then 
    source /var/www/ss-perms
fi

## run ss-purge if set to quarter-daily ##
if [[ "$SS_INTERVAL_PURGE" == "quarter-daily" ]]; then 
    source /var/www/ss-purge
fi

####################################################################################################
#### 06-Cron-Quarter-Daily: Reset Permissions (SS Core Bash Scripts + SS Core Cron Jobs) ###########
####################################################################################################

## SNIPPET: ss-check, ss-worker, ss core cron jobs

## we hardcode this permissions reset snippet into all ss core scripts for redundancy ##
## chmod 0700 means only the root/sudo users can execute the ss core scripts ##

## reset permissions ##
chown root:root /var/www/ss* ## must be root:root
chown root:root /var/www/crons/*cron* ## must be root:root
chmod 0700 /var/www/ss* ## 0700 means root can execute
chmod 0700 /var/www/crons/*cron* ## 0700 means root can execute

####################################################################################################
#### 06-Cron-Quarter-Daily: Delete Lock File #######################################################
####################################################################################################

## here we delete the lock file associated with this cron job to clear the cron queue ##
## this is technically not necessary but we do it anyway for extra security ##

## delete lock file ##
rm /tmp/06-cron-quarter-daily*.lock*

####################################################################################################
#### 06-Cron-Quarter-Daily: Touch Timestamp File (End Script) ######################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

## script timestamp ##
touch /var/www/meta/.timestamp-06-cron-quarter-daily

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://bash.cyberciti.biz/guide/Setting_up_permissions_on_a_script
## Ref: https://stackoverflow.com/questions/22861580/bash-script-check-if-a-file-contains-a-specific-line
## Ref: https://stackoverflow.com/questions/4749330/how-to-test-if-string-exists-in-file-with-bash/14201583
## Ref: https://stackoverflow.com/questions/11287861/how-to-check-if-a-file-contains-a-specific-string-using-bash
## Ref: https://stackoverflow.com/questions/4749330/how-to-test-if-string-exists-in-file-with-bash-
## Ref: https://stackoverflow.com/questions/42377739/while-file-doesnt-contain-string-bash

## SS_EOF
