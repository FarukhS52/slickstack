#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: http://mirrors.slickstack.io/bash/ss-worker.txt #######################################
#### path: /var/www/ss-worker ######################################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Performs SlickStack maintenance tasks and retrieves the latest ss-check file #########
#### module version: Ubuntu 20.04 LTS ##############################################################
#### sourced by: ss core cron jobs, ss-install, ss-update ##########################################
#### bash aliases: ss worker #######################################################################
####################################################################################################

## include SlickStack configuration ##
source /var/www/ss-config

## include SlickStack functions ##
source /var/www/ss-functions

## local variables ##


####################################################################################################
#### SS-Worker: Message (Begin Script) #############################################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be noticed by sudo users who manually call ss core bash scripts ##

## echo message ##
echo -e "${PURPLE}Running ss-worker: Performs SlickStack maintenance tasks and retrieves the latest ss-check file... ${NOCOLOR}"
sleep "$SLEEP_MESSAGE_BEGIN"

####################################################################################################
#### SS-Worker: Cleanup Temporary Files ############################################################
####################################################################################################

## delete tmp files ##
rm /tmp/ss*
rm /tmp/*cron*
rm /tmp/blacklist*
rm /tmp/maintenance.html*

####################################################################################################
#### SS-Update: Backup Current SS-Config File ######################################################
####################################################################################################

## SNIPPET: ss-worker, ss-update

## this snippet will duplicate your live ss-config file to the /var/www/meta/ folder ##
## the timestamped .bak files will be cleaned up periodically by ss-clean ##

## backup ss-config ##
current_time=$(date "+%Y.%b.%d-%H:%M:%S")
cp /var/www/ss-config /var/www/meta/ss-config.bak.$current_time

####################################################################################################
#### SS-Worker: Retrieve Latest SS-Check File (SS Core Bash Script) ################################
####################################################################################################

## here we retrieve the latest ss-check core bash script to improve overall redundancy ##
## thus ss-check avoids installing itself and no single point of failure (SPOF) ##

## retrieve latest ss-check (ss core bash script) ##
wget -O /tmp/ss-check http://mirrors.slickstack.io/bash/ss-check.txt
# wget -O "$TMP_SS_CHECK" "$MIRROR_SS_CHECK"

## move (install) ss-check ##
cp /tmp/ss-check /var/www/ss-check
# cp "$TMP_SS_CHECK" "$PATH_SS_CHECK"

####################################################################################################
#### SS-Worker: Install Required Single-File WordPress MU Plugins If Not Exist #####################
####################################################################################################

## in certain situations we have noticed single-file required MU plugins gone missing ##
## therefore this will briefly check if they are missing and install if needed ##

## install required single-file MU plugins (Autoloader) ##
if [[ ! -f "/var/www/html/wp-content/mu-plugins/autoloader.php" ]] && [[ "$SS_APP" == "wordpress" || -z "$SS_APP"  ]]; then
    wget -O /tmp/autoloader.php http://mirrors.slickstack.io/mu-plugins/autoloader.txt
    cp /tmp/autoloader.php /var/www/html/wp-content/mu-plugins/autoloader.php
    chmod 0440 /var/www/html/wp-content/mu-plugins/autoloader.php ## 0440 (read-only)
fi

## install required single-file MU plugins (XXX Common) ##
# if [[ ! -f "/var/www/html/wp-content/mu-plugins/xxx-common.php" ]] && [[ "$SS_APP" == "wordpress" || -z "$SS_APP"  ]]; then

# fi

# wget -O "$TMP_XXX_COMMON_PHP" "$MIRROR_XXX_COMMON_PHP"
#### VALIDATE_XXX_COMMON_PHP=$(grep "$SS_EOF" "$PATH_XXX_COMMON_PHP")
# VALIDATE_TMP_XXX_COMMON_PHP=$(grep "$SS_EOF" "$TMP_XXX_COMMON_PHP")

# if [[ -n "$VALIDATE_TMP_XXX_COMMON_PHP" ]]; then
  #  cp "$TMP_XXX_COMMON_PHP" "$PATH_XXX_COMMON_PHP"
   # chmod 0440 "$PATH_XXX_COMMON_PHP" ## 0440 (read-only)
# fi 

# rm "$TMP_XXX_COMMON_PHP"

####################################################################################################
#### SS-Worker: Ensure WP-Config.php Intact ########################################################
####################################################################################################

## this snippet will check to ensure wp-config.php exists and contains SS_EOF string ##
## if not found then it will call script to reinstall the wp-config.php file ##

## ensure wp-config.php intact (production) ##
# if [[ -z "$VALIDATE_WP_CONFIG_PHP" ]]; then
#    source /var/www/ss-install-wordpress-config
# fi

####################################################################################################
#### SS-Worker: Retrieve Latest Custom Cron Job Boilerplates (If Not Exist) ########################
####################################################################################################

## this will retrieve and install boilerplates for custom cron jobs if none are found ##
## you can then edit these files as needed and they will not be overwritten ##

if [[ ! -f "/var/www/crons/custom/01-cron-often-custom" ]]; then
    wget -O /tmp/01-cron-often-custom http://mirrors.slickstack.io/crons/custom/01-cron-often-custom.txt
    cp -n /tmp/01-cron-often-custom /var/www/crons/custom/01-cron-often-custom
fi

if [[ ! -f "/var/www/crons/custom/02-cron-regular-custom" ]]; then
    wget -O /tmp/02-cron-regular-custom http://mirrors.slickstack.io/crons/custom/02-cron-regular-custom.txt
    cp -n /tmp/02-cron-regular-custom /var/www/crons/custom/02-cron-regular-custom
fi

if [[ ! -f "/var/www/crons/custom/03-cron-quarter-hourly-custom" ]]; then
    wget -O /tmp/03-cron-quarter-hourly-custom http://mirrors.slickstack.io/crons/custom/03-cron-quarter-hourly-custom.txt
    cp -n /tmp/03-cron-quarter-hourly-custom /var/www/crons/custom/03-cron-quarter-hourly-custom
fi

if [[ ! -f "/var/www/crons/custom/04-cron-half-hourly-custom" ]]; then
    wget -O /tmp/04-cron-half-hourly-custom http://mirrors.slickstack.io/crons/custom/04-cron-half-hourly-custom.txt 
    cp -n /tmp/04-cron-half-hourly-custom /var/www/crons/custom/04-cron-half-hourly-custom
fi

if [[ ! -f "/var/www/crons/custom/05-cron-hourly-custom" ]]; then
    wget -O /tmp/05-cron-hourly-custom http://mirrors.slickstack.io/crons/custom/05-cron-hourly-custom.txt
    cp -n /tmp/05-cron-hourly-custom /var/www/crons/custom/05-cron-hourly-custom
fi

if [[ ! -f "/var/www/crons/custom/06-cron-quarter-daily-custom" ]]; then
    wget -O /tmp/06-cron-quarter-daily-custom http://mirrors.slickstack.io/crons/custom/06-cron-quarter-daily-custom.txt
    cp -n /tmp/06-cron-quarter-daily-custom /var/www/crons/custom/06-cron-quarter-daily-custom
fi

if [[ ! -f "/var/www/crons/custom/07-cron-half-daily-custom" ]]; then
    wget -O /tmp/07-cron-half-daily-custom http://mirrors.slickstack.io/crons/custom/07-cron-half-daily-custom.txt
    cp -n /tmp/07-cron-half-daily-custom /var/www/crons/custom/07-cron-half-daily-custom
fi

if [[ ! -f "/var/www/crons/custom/08-cron-daily-custom" ]]; then
    wget -O /tmp/08-cron-daily-custom http://mirrors.slickstack.io/crons/custom/08-cron-daily-custom.txt
    cp -n /tmp/08-cron-daily-custom /var/www/crons/custom/08-cron-daily-custom
fi

if [[ ! -f "/var/www/crons/custom/09-cron-half-weekly-custom" ]]; then
    wget -O /tmp/09-cron-half-weekly-custom http://mirrors.slickstack.io/crons/custom/09-cron-half-weekly-custom.txt
    cp -n /tmp/09-cron-half-weekly-custom /var/www/crons/custom/09-cron-half-weekly-custom
fi

if [[ ! -f "/var/www/crons/custom/10-cron-weekly-custom" ]]; then
    wget -O /tmp/10-cron-weekly-custom http://mirrors.slickstack.io/crons/custom/10-cron-weekly-custom.txt
    cp -n /tmp/10-cron-weekly-custom /var/www/crons/custom/10-cron-weekly-custom
fi

if [[ ! -f "/var/www/crons/custom/11-cron-half-monthly-custom" ]]; then
    wget -O /tmp/11-cron-half-monthly-custom http://mirrors.slickstack.io/crons/custom/11-cron-half-monthly-custom.txt
    cp -n /tmp/11-cron-half-monthly-custom /var/www/crons/custom/11-cron-half-monthly-custom
fi

if [[ ! -f "/var/www/crons/custom/12-cron-monthly-custom" ]]; then
    wget -O /tmp/12-cron-monthly-custom http://mirrors.slickstack.io/crons/custom/12-cron-monthly-custom.txt
    cp -n /tmp/12-cron-monthly-custom /var/www/crons/custom/12-cron-monthly-custom
fi

if [[ ! -f "/var/www/crons/custom/13-cron-sometimes-custom" ]]; then
    wget -O /tmp/13-cron-sometimes-custom http://mirrors.slickstack.io/crons/custom/13-cron-sometimes-custom.txt
    cp -n /tmp/13-cron-sometimes-custom /var/www/crons/custom/13-cron-sometimes-custom
fi

####################################################################################################
#### SS-Worker: Retrieve Latest SS-Constants.php Boilerplate #######################################
####################################################################################################

## retrieve latest ss-constants.php boilerplate ##
wget -O /tmp/ss-constants.php http://mirrors.slickstack.io/php-fpm/ss-constants.txt
cp /tmp/ss-constants.php /var/www/meta/ss-constants.php
chown www-data:www-data /var/www/meta/ss-constants.php
chmod 0444 /var/www/meta/ss-constants.php ## 0440 (read-only)

####################################################################################################
#### SS-Worker: Retrieve Latest Nginx Maintenance File #############################################
####################################################################################################

## retrieve latest maintenance.html file ##
wget -O /tmp/maintenance.html "$MIRROR_MAINTENANCE_HTML"
cp /tmp/maintenance.html /var/www/meta/maintenance.html
chown www-data:www-data /var/www/meta/maintenance.html
chmod 0444 /var/www/meta/maintenance.html ## 0444

####################################################################################################
#### SS-Worker: Reset Permissions (SlickStack Core Files) ##########################################
####################################################################################################

## SNIPPET: ss-check, ss-perms, ss-worker

## because SlickStack core permissions are critical this is hardcoded in multiple scripts ##
## this ensures that permissions are reset regularly and do not rely on sourcing ##

## make directories ##
mkdir /var/www
mkdir /var/www/cache
mkdir /var/www/cache/nginx
mkdir /var/www/cache/opcache
mkdir /var/www/cache/system
mkdir /var/www/certs
mkdir /var/www/certs/keys
mkdir /var/www/crons
mkdir /var/www/crons/custom
mkdir /var/www/html
mkdir /var/www/html/.well-known
mkdir /var/www/html/.well-known/acme-challenge
mkdir /var/www/logs
mkdir /var/www/meta
mkdir /var/www/sites

## reset permissions ##
chown root:root /var ## must be root:root
chown root:root /var/www ## must be root:root
chown www-data:www-data /var/www/cache ## must be www-data:www-data
chown www-data:www-data /var/www/cache/opcache ## must be www-data:www-data
chown root:root /var/www/certs
chown root:root /var/www/certs/keys
chown root:root /var/www/crons ## must be root:root
chown root:root /var/www/crons/custom ## must be root:root
chown -R $SFTP_USER:www-data /var/www/html/.well-known
chown www-data:www-data /var/www/logs ## must be www-data:www-data
chown www-data:www-data /var/www/meta ## must be www-data:www-data
chmod 0755 /var/www ## must be 0755
chmod 0775 /var/www/cache ## 6755 should also work
chmod 0755 /var/www/cache/opcache ## 755 should also work
chmod 0755 /var/www/certs ## must be 0755
chmod 0700 /var/www/certs/keys ## must be 0700
chmod 0644 /var/www/certs/*.crt ## must be 0644
chmod 0644 /var/www/certs/*.pem ## must be 0644
chmod 0600 /var/www/certs/keys/*.key ## must be 0600
chmod 0600 /var/www/certs/keys/*.pem ## must be 0600
chmod 0755 /var/www/crons ## must be 0755
chmod 0755 /var/www/crons/custom ## must be 0755
chmod 0755 /var/www/html/.well-known ## accessed by server for e.g. Cerbot but also by SFTP user for things like Stripe ##
chmod 0775 /var/www/logs ## 6755 should also work
chmod 0775 /var/www/meta ## 6755 should also work

####################################################################################################
## SS-Worker: Download Latest Blacklist.txt File For Plugin Blacklist (MU Plugin) ##################
####################################################################################################

## here we retrieve the latest plugin blacklist file which might contain urgent changes ##
## maintaining a thoughtful blacklist vastly improves WP performance and security ##

## download latest blacklist (or custom blacklist) ##
if [[ -z "$PLUGIN_BLACKLIST_SOURCE" ]]; then 
    wget -O /tmp/blacklist.txt "$MIRROR_BLACKLIST_TXT"
else 
    wget -O /tmp/blacklist.txt "$PLUGIN_BLACKLIST_SOURCE"
fi

## copy file to wp-content directory ##
cp /tmp/blacklist.txt /var/www/html/wp-content/blacklist.txt

## reset permissions ##
chown www-data:wordpress /var/www/html/wp-content/blacklist.txt ## change to www-data:www-data when ss-perms fixed
chmod 0440 /var/www/html/wp-content/blacklist.txt

## NULL blacklist.txt if ss-config false (allows default SS MU plugin to be installed while still being able to disable plugin blacklist) ##
if [[ "$SS_PLUGIN_BLACKLIST" == "false" ]]; then 
cat /dev/null > /var/www/html/wp-content/blacklist.txt
cat /dev/null > /var/www/html/dev/wp-content/blacklist.txt
cat /dev/null > /var/www/html/staging/wp-content/blacklist.txt
fi

####################################################################################################
#### SS-Worker: Install Ubuntu Swapfile (If Not Exists) ############################################
####################################################################################################

## run ss-install-ubuntu-swap (conditional) ##
if [[ ! -f "/var/www/cache/system/swapfile" ]]; then 
    source /var/www/ss-install-ubuntu-swap
fi

####################################################################################################
#### SS-Worker: Calculate Largest Directories On Server + Update Meta Records ######################
####################################################################################################

# du -a /var/www/html | sort -n -r | head -n 15

####################################################################################################
#### SS-Worker: Various TEMP Tasks (e.g. Urgent Patches From The SlickStack Team, Etc) #############
####################################################################################################

# source /var/www/ss-install-nginx
# source /var/www/ss-install-wordpress-core
# source /var/www/ss-install-wordpress-config
# source /var/www/ss-install-wordpress-mu-plugins
# source /var/www/ss-perms
# source /var/www/ss-purge
# source /var/www/ss-reset-password-sftp
# source /var/www/ss-clean-files
# source /var/www/ss-install-ubuntu-bash
# source /var/www/ss-encrypt-openssl
# source /var/www/ss-encrypt-certbot
# source /var/www/ss-reboot
# source /var/www/ss-install-ubuntu-crontab
source /var/www/ss-update-config
# source /var/www/ss-install-ufw

rm /var/www/html/dev/*

sed -i "s|## EOF|## SS_EOF|g" /var/www/ss-config


sed -i "s|http://mirrors.slickstack.io/wordpress/blacklist.txt|http://mirrors.slickstack.io/modules/wordpress/blacklist.txt|g" /var/www/ss-config

sed -i "s|http://mirrors.slickstack.io/wordpress/functions.txt|http://mirrors.slickstack.io/modules/wordpress/mu-plugins/functions.txt|g" /var/www/ss-config

sed -i "s|http://mirrors.slickstack.io/wordpress/throwaway.zip|http://mirrors.slickstack.io/modules/wordpress/throwaway.zip|g" /var/www/ss-config


####################################################################################################
#### SS-Worker: Cleanup Temporary Files ############################################################
####################################################################################################

## delete tmp files ##
rm /tmp/ss*
rm /tmp/*cron*
rm /tmp/blacklist*
rm /tmp/maintenance.html*

####################################################################################################
#### SS-Worker: Reset Permissions (SS Core Bash Scripts + SS Core Cron Jobs) #######################
####################################################################################################

## SNIPPET: ss-check, ss-worker, ss core cron jobs

## we hardcode this permissions reset snippet into all ss core scripts for redundancy ##
## chmod 0700 means only the root/sudo users can execute the ss core scripts ##

## reset permissions ##
chown root:root /var/www/ss* ## must be root:root
chown root:root /var/www/crons/*cron* ## must be root:root
chmod 0700 /var/www/ss* ## 0700 means root can execute
chmod 0700 /var/www/crons/*cron* ## 0700 means root can execute

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS

####################################################################################################
#### SS-Worker: Touch Timestamp File (End Script) ##################################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

## script timestamp ##
touch /var/www/meta/.timestamp-ss-worker

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://linuxize.com/post/bash-functions/
## Ref: https://www.cyberciti.biz/faq/unix-linux-appleosx-bsd-shell-appending-date-to-filename/
## Ref: https://wordpress.stackexchange.com/questions/199725/triggering-cron-by-calling-wp-cron-php-on-the-command-line-rather-than-with-wget
## Ref: https://serverfault.com/questions/259302/best-location-to-keep-ssl-certificates-and-private-keys-on-ubuntu-servers
## Ref: https://tldp.org/LDP/abs/html/comparison-ops.html
## Ref: https://stackoverflow.com/questions/33203898/wget-skip-download-if-file-already-exists
## Ref: https://stackoverflow.com/questions/12664534/idealised-wget-download-install-process

## SS_EOF
