#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: http://mirrors.slickstack.io/bash/ss-check.txt ########################################
#### path: /var/www/ss-check #######################################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Retrieves latest ss core cron jobs and ss core bash scripts (except ss-check) ########
#### module version: Ubuntu 20.04 LTS ##############################################################
#### sourced by: ss-install, ss-update, ss core cron jobs ##########################################
#### bash aliases: ss check ########################################################################
####################################################################################################

## source ss-config ##
source /var/www/ss-config

## source ss-functions ##
source /var/www/ss-functions

## BELOW THIS RELIES ON SS-CONFIG AND SS-FUNCTIONS ##

####################################################################################################
#### SS-Check: Message (Begin Script) ##############################################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be noticed by sudo users who manually call ss core bash scripts ##

## echo message ##
echo -e "${PURPLE}Running ss-check: Retrieves latest ss core cron jobs and ss core bash scripts (except ss-check)... ${NOCOLOR}"
sleep "$SLEEP_MESSAGE_BEGIN"

####################################################################################################
#### SS-Check: Cleanup Temporary Files #############################################################
####################################################################################################

## delete tmp files ##
rm /tmp/ss*
rm /tmp/*cron*

####################################################################################################
#### SS-Check: Retrieve Latest SlickStack Core Files (Except SS-Check) #############################
####################################################################################################

## here we retrieve all the latest ss core cron jobs and bash scripts to keep them updated ##
## this process does not affect ss-config or LEMP modules, nor the ss-check file ##

## retrieve ss core cron jobs ##
wget -O "$TMP_00_CRONTAB" "$MIRROR_00_CRONTAB"
wget -O "$TMP_01_CRON_OFTEN" "$MIRROR_01_CRON_OFTEN"
wget -O "$TMP_02_CRON_REGULAR" "$MIRROR_02_CRON_REGULAR"
wget -O "$TMP_03_CRON_QUARTER_HOURLY" "$MIRROR_03_CRON_QUARTER_HOURLY"
wget -O "$TMP_04_CRON_HALF_HOURLY" "$MIRROR_04_CRON_HALF_HOURLY"
wget -O "$TMP_05_CRON_HOURLY" "$MIRROR_05_CRON_HOURLY"
wget -O "$TMP_06_CRON_QUARTER_HOURLY" "$MIRROR_06_CRON_QUARTER_DAILY"
wget -O "$TMP_07_CRON_HALF_DAILY" "$MIRROR_07_CRON_HALF_DAILY"
wget -O "$TMP_08_CRON_DAILY" "$MIRROR_08_CRON_DAILY"
wget -O "$TMP_09_CRON_HALF_WEEKLY" "$MIRROR_09_CRON_HALF_WEEKLY"
wget -O "$TMP_10_CRON_WEEKLY" "$MIRROR_10_CRON_WEEKLY"
wget -O "$TMP_11_CRON_HALF_MONTHLY" "$MIRROR_11_CRON_HALF_MONTHLY"
wget -O "$TMP_12_CRON_MONTHLY" "$MIRROR_12_CRON_MONTHLY"
wget -O "$TMP_13_CRON_SOMETIMES" "$MIRROR_13_CRON_SOMETIMES"

## retrieve ss core bash scripts ##
wget -O "$TMP_SS_CLEAN_FILES" "$MIRROR_SS_CLEAN_FILES"
wget -O "$TMP_SS_CONFIG_SAMPLE" "$MIRROR_SS_CONFIG_SAMPLE"
wget -O "$TMP_SS_DELETE_DATABASE" "$MIRROR_SS_DELETE_DATABASE"
wget -O "$TMP_SS_DELETE_FILES" "$MIRROR_SS_DELETE_FILES"
wget -O "$TMP_SS_DOS2UNIX" "$MIRROR_SS_DOS2UNIX"
wget -O "$TMP_SS_DUMP_DATABASE" "$MIRROR_SS_DUMP_DATABASE"
wget -O "$TMP_SS_ENCRYPT" "$MIRROR_SS_ENCRYPT"
wget -O "$TMP_SS_ENCRYPT_CERTBOT" "$MIRROR_SS_ENCRYPT_CERTBOT"
wget -O "$TMP_SS_ENCRYPT_OPENSSL" "$MIRROR_SS_ENCRYPT_OPENSSL"
wget -O "$TMP_SS_FUNCTIONS" "$MIRROR_SS_FUNCTIONS"
wget -O /tmp/ss-import "$MIRROR_SS_IMPORT"
wget -O /tmp/ss-import-database "$MIRROR_SS_IMPORT_DATABASE"
wget -O /tmp/ss-import-files "$MIRROR_SS_IMPORT_FILES"
wget -O /tmp/ss-install "$MIRROR_SS_INSTALL"
wget -O /tmp/ss-install-adminer "$MIRROR_SS_INSTALL_ADMINER"
wget -O /tmp/ss-install-clamav "$MIRROR_SS_INSTALL_CLAMAV"
wget -O /tmp/ss-install-craft-config "$MIRROR_SS_INSTALL_CRAFT_CONFIG"
wget -O /tmp/ss-install-craft-core "$MIRROR_SS_INSTALL_CRAFT_CORE"
wget -O /tmp/ss-install-magento-config "$MIRROR_SS_INSTALL_MAGENTO_CONFIG"
wget -O /tmp/ss-install-magento-core "$MIRROR_SS_INSTALL_MAGENTO_CORE"
wget -O /tmp/ss-install-mediawiki-config "$MIRROR_SS_INSTALL_MEDIAWIKI_CONFIG"
wget -O /tmp/ss-install-mediawiki-core "$MIRROR_SS_INSTALL_MEDIAWIKI_CORE"
wget -O /tmp/ss-install-moodle-config "$MIRROR_SS_INSTALL_MOODLE_CONFIG"
wget -O /tmp/ss-install-moodle-core "$MIRROR_SS_INSTALL_MOODLE_CORE"
wget -O /tmp/ss-install-mysql "$MIRROR_SS_INSTALL_MYSQL"
wget -O /tmp/ss-install-mysql-config "$MIRROR_SS_INSTALL_MYSQL_CONFIG"
wget -O /tmp/ss-install-mysql-core "$MIRROR_SS_INSTALL_MYSQL_CORE"
wget -O /tmp/ss-install-nginx "$MIRROR_SS_INSTALL_NGINX"
wget -O /tmp/ss-install-nginx-config "$MIRROR_SS_INSTALL_NGINX_CONFIG"
wget -O /tmp/ss-install-nginx-core "$MIRROR_SS_INSTALL_NGINX_CORE"
wget -O /tmp/ss-install-nginx-ssl "$MIRROR_SS_INSTALL_NGINX_SSL"
wget -O /tmp/ss-install-nginx-openssl "$MIRROR_SS_INSTALL_NGINX_OPENSSL"
wget -O /tmp/ss-install-nginx-letsencrypt "$MIRROR_SS_INSTALL_NGINX_LETSENCRYPT"
wget -O /tmp/ss-install-opencart-config "$MIRROR_SS_INSTALL_OPENCART_CONFIG"
wget -O /tmp/ss-install-opencart-core "$MIRROR_SS_INSTALL_OPENCART_CORE"
wget -O /tmp/ss-install-php "$MIRROR_SS_INSTALL_PHP"
wget -O /tmp/ss-install-php-config "$MIRROR_SS_INSTALL_PHP_CONFIG"
wget -O /tmp/ss-install-php-core "$MIRROR_SS_INSTALL_PHP_CORE"
wget -O /tmp/ss-install-postfix "$MIRROR_SS_INSTALL_POSTFIX"
wget -O /tmp/ss-install-prestashop-config "$MIRROR_SS_INSTALL_PRESTASHOP_CONFIG"
wget -O /tmp/ss-install-prestashop-core "$MIRROR_SS_INSTALL_PRESTASHOP_CORE"
wget -O /tmp/ss-install-redis "$MIRROR_SS_INSTALL_REDIS"
wget -O /tmp/ss-install-ubuntu-bash "$MIRROR_SS_INSTALL_UBUNTU_BASH"
wget -O /tmp/ss-install-ubuntu-crontab "$MIRROR_SS_INSTALL_UBUNTU_CRONTAB"
wget -O /tmp/ss-install-ubuntu-kernel "$MIRROR_SS_INSTALL_UBUNTU_KERNEL"
wget -O /tmp/ss-install-ubuntu-ssh "$MIRROR_SS_INSTALL_UBUNTU_SSH"
wget -O /tmp/ss-install-ubuntu-swap "$MIRROR_SS_INSTALL_UBUNTU_SWAP"
wget -O /tmp/ss-install-ubuntu-users "$MIRROR_SS_INSTALL_UBUNTU_USERS"
wget -O /tmp/ss-install-ubuntu-utils "$MIRROR_SS_INSTALL_UBUNTU_UTILS"
wget -O /tmp/ss-install-ufw "$MIRROR_SS_INSTALL_UFW"
wget -O /tmp/ss-install-ufw-config "$MIRROR_SS_INSTALL_UFW_CONFIG"
wget -O /tmp/ss-install-ufw-core "$MIRROR_SS_INSTALL_UFW_CORE"
wget -O /tmp/ss-install-wordpress-cli "$MIRROR_SS_INSTALL_WORDPRESS_CLI"
wget -O /tmp/ss-install-wordpress-config "$MIRROR_SS_INSTALL_WORDPRESS_CONFIG"
wget -O /tmp/ss-install-wordpress-core "$MIRROR_SS_INSTALL_WORDPRESS_CORE"
wget -O /tmp/ss-install-wordpress-mu-plugins "$MIRROR_SS_INSTALL_WORDPRESS_MU_PLUGINS"
wget -O /tmp/ss-maintenance-disable "$MIRROR_SS_MAINTENANCE_DISABLE"
wget -O /tmp/ss-maintenance-enable "$MIRROR_SS_MAINTENANCE_ENABLE"
wget -O /tmp/ss-monitor "$MIRROR_SS_MONITOR"
wget -O /tmp/ss-optimize-database "$MIRROR_SS_OPTIMIZE_DATABASE"
wget -O /tmp/ss-overview "$MIRROR_SS_OVERVIEW"
wget -O /tmp/ss-perms "$MIRROR_SS_PERMS"
wget -O /tmp/ss-perms-adminer "$MIRROR_SS_PERMS_ADMINER"
wget -O /tmp/ss-perms-clamav "$MIRROR_SS_PERMS_CLAMAV"
wget -O /tmp/ss-perms-craft-config "$MIRROR_SS_PERMS_CRAFT_CONFIG"
wget -O /tmp/ss-perms-craft-core "$MIRROR_SS_PERMS_CRAFT_CORE"
wget -O /tmp/ss-perms-magento-config "$MIRROR_SS_PERMS_MAGENTO_CONFIG"
wget -O /tmp/ss-perms-magento-core "$MIRROR_SS_PERMS_MAGENTO_CORE"
wget -O /tmp/ss-perms-mediawiki-config "$MIRROR_SS_PERMS_MEDIAWIKI_CONFIG"
wget -O /tmp/ss-perms-mediawiki-core "$MIRROR_SS_PERMS_MEDIAWIKI_CORE"
wget -O /tmp/ss-perms-moodle-config "$MIRROR_SS_PERMS_MOODLE_CONFIG"
wget -O /tmp/ss-perms-moodle-core "$MIRROR_SS_PERMS_MOODLE_CORE"
wget -O /tmp/ss-perms-mysql "$MIRROR_SS_PERMS_MYSQL"
wget -O /tmp/ss-perms-nginx "$MIRROR_SS_PERMS_NGINX"
wget -O /tmp/ss-perms-nginx-config "$MIRROR_SS_PERMS_NGINX_CONFIG"
wget -O /tmp/ss-perms-nginx-core "$MIRROR_SS_PERMS_NGINX_CORE"
wget -O /tmp/ss-perms-nginx-ssl "$MIRROR_SS_PERMS_NGINX_SSL"
wget -O /tmp/ss-perms-opencart-config "$MIRROR_SS_PERMS_OPENCART_CONFIG"
wget -O /tmp/ss-perms-opencart-core "$MIRROR_SS_PERMS_OPENCART_CORE"
wget -O /tmp/ss-perms-php "$MIRROR_SS_PERMS_PHP"
wget -O /tmp/ss-perms-php-config "$MIRROR_SS_PERMS_PHP_CONFIG"
wget -O /tmp/ss-perms-php-core "$MIRROR_SS_PERMS_PHP_CORE"
wget -O /tmp/ss-perms-postfix "$MIRROR_SS_PERMS_POSTFIX"
wget -O /tmp/ss-perms-prestashop-config "$MIRROR_SS_PERMS_PRESTASHOP_CONFIG"
wget -O /tmp/ss-perms-prestashop-core "$MIRROR_SS_PERMS_PRESTASHOP_CORE"
wget -O /tmp/ss-perms-redis "$MIRROR_SS_PERMS_REDIS"
wget -O /tmp/ss-perms-wordpress-cli "$MIRROR_SS_PERMS_WORDPRESS_CLI"
wget -O /tmp/ss-perms-wordpress-config "$MIRROR_SS_PERMS_WORDPRESS_CONFIG"
wget -O /tmp/ss-perms-wordpress-core "$MIRROR_SS_PERMS_WORDPRESS_CORE"
wget -O /tmp/ss-perms-wordpress-mu-plugins "$MIRROR_SS_PERMS_WORDPRESS_MU_PLUGINS"
wget -O /tmp/ss-perms-ubuntu-bash "$MIRROR_SS_PERMS_UBUNTU_BASH"
wget -O /tmp/ss-perms-ubuntu-crontab "$MIRROR_SS_PERMS_UBUNTU_CRONTAB"
wget -O /tmp/ss-perms-ubuntu-kernel "$MIRROR_SS_PERMS_UBUNTU_KERNEL"
wget -O /tmp/ss-perms-ubuntu-ssh "$MIRROR_SS_PERMS_UBUNTU_SSH"
wget -O /tmp/ss-perms-ubuntu-swap "$MIRROR_SS_PERMS_UBUNTU_SWAP"
wget -O /tmp/ss-perms-ubuntu-users "$MIRROR_SS_PERMS_UBUNTU_USERS"
wget -O /tmp/ss-perms-ubuntu-utils "$MIRROR_SS_PERMS_UBUNTU_UTILS"
wget -O /tmp/ss-perms-ufw "$MIRROR_SS_PERMS_UFW"
wget -O /tmp/ss-perms-ufw-config "$MIRROR_SS_PERMS_UFW_CONFIG"
wget -O /tmp/ss-perms-ufw-core "$MIRROR_SS_PERMS_UFW_CORE"
wget -O /tmp/ss-purge "$MIRROR_SS_PURGE"
wget -O /tmp/ss-purge-nginx "$MIRROR_SS_PURGE_NGINX"
wget -O /tmp/ss-purge-opcache "$MIRROR_SS_PURGE_OPCACHE"
wget -O /tmp/ss-purge-redis "$MIRROR_SS_PURGE_REDIS"
wget -O /tmp/ss-purge-transients "$MIRROR_SS_PURGE_TRANSIENTS"
wget -O /tmp/ss-reboot "$MIRROR_SS_REBOOT"
wget -O /tmp/ss-remote "$MIRROR_SS_REMOTE"
wget -O /tmp/ss-reset-logs "$MIRROR_SS_RESET_LOGS"
wget -O /tmp/ss-reset-password-sftp "$MIRROR_SS_RESET_PASSWORD_SFTP"
wget -O /tmp/ss-restart-services "$MIRROR_SS_RESTART_SERVICES"
wget -O /tmp/ss-restart-services-mysql "$MIRROR_SS_RESTART_SERVICES_MYSQL"
wget -O /tmp/ss-restart-services-nginx "$MIRROR_SS_RESTART_SERVICES_NGINX"
wget -O /tmp/ss-restart-services-php "$MIRROR_SS_RESTART_SERVICES_PHP"
wget -O /tmp/ss-restart-services-redis "$MIRROR_SS_RESTART_SERVICES_REDIS"
wget -O /tmp/ss-scan-malware "$MIRROR_SS_SCAN_MALWARE"
wget -O /tmp/ss-sync-staging "$MIRROR_SS_SYNC_STAGING"
wget -O /tmp/ss-update "$MIRROR_SS_UPDATE"
wget -O /tmp/ss-update-config "$MIRROR_SS_UPDATE_CONFIG"
wget -O /tmp/ss-update-packages "$MIRROR_SS_UPDATE_PACKAGES"
wget -O /tmp/ss-worker https://raw.githubusercontent.com/littlebizzy/slickstack/master/bash/ss-worker.txt

####################################################################################################
#### SS-Check: Install Latest SlickStack Core Files (Except SS-Check) ##############################
####################################################################################################

## here we copy all the downloaded core files to the proper folders where they remain ##
## the root crontab runs the core cron jobs which in turn run the bash scripts ##

## install ss core cron jobs ##
cp "$TMP_00_CRONTAB" "$PATH_00_CRONTAB"
cp "$TMP_01_CRON_OFTEN" "$PATH_01_CRON_OFTEN"
cp "$TMP_02_CRON_REGULAR" "$PATH_02_CRON_REGULAR"
cp "$TMP_03_CRON_QUARTER_HOURLY" "$PATH_03_CRON_QUARTER_HOURLY"
cp "$TMP_04_CRON_HALF_HOURLY" "$PATH_04_CRON_HALF_HOURLY"
cp "$TMP_05_CRON_HOURLY" "$PATH_05_CRON_HOURLY"
cp "$TMP_06_CRON_QUARTER_HOURLY" "$PATH_06_CRON_QUARTER_DAILY"
cp "$TMP_07_CRON_HALF_DAILY" "$PATH_07_CRON_HALF_DAILY"
cp "$TMP_08_CRON_DAILY" "$PATH_08_CRON_DAILY"
cp "$TMP_09_CRON_HALF_WEEKLY" "$PATH_09_CRON_HALF_WEEKLY"
cp "$TMP_10_CRON_WEEKLY" "$PATH_10_CRON_WEEKLY"
cp "$TMP_11_CRON_HALF_MONTHLY" "$PATH_11_CRON_HALF_MONTHLY"
cp "$TMP_12_CRON_MONTHLY" "$PATH_12_CRON_MONTHLY"
cp "$TMP_13_CRON_SOMETIMES" "$PATH_13_CRON_SOMETIMES"

## install ss core bash scripts ##
cp /tmp/ss-clean-files /var/www/ss-clean-files
cp /tmp/ss-config-sample /var/www/ss-config-sample
cp /tmp/ss-delete-database /var/www/ss-delete-database
cp /tmp/ss-delete-files /var/www/ss-delete-files
cp /tmp/ss-dos2unix /var/www/ss-dos2unix
cp /tmp/ss-dump-database /var/www/ss-dump-database
cp /tmp/ss-encrypt /var/www/ss-encrypt
cp /tmp/ss-encrypt-certbot /var/www/ss-encrypt-certbot
cp /tmp/ss-encrypt-openssl /var/www/ss-encrypt-openssl
cp /tmp/ss-functions /var/www/ss-functions
cp /tmp/ss-import /var/www/ss-import
cp /tmp/ss-import-database /var/www/ss-import-database
cp /tmp/ss-import-files /var/www/ss-import-files
cp /tmp/ss-install /var/www/ss-install
cp /tmp/ss-install-adminer /var/www/ss-install-adminer
cp /tmp/ss-install-clamav /var/www/ss-install-clamav
cp /tmp/ss-install-craft-config /var/www/ss-install-craft-config
cp /tmp/ss-install-craft-core /var/www/ss-install-craft-core
cp /tmp/ss-install-magento-config /var/www/ss-install-magento-config
cp /tmp/ss-install-magento-core /var/www/ss-install-magento-core
cp /tmp/ss-install-mediawiki-config /var/www/ss-install-mediawiki-config
cp /tmp/ss-install-mediawiki-core /var/www/ss-install-mediawiki-core
cp /tmp/ss-install-moodle-config /var/www/ss-install-moodle-config
cp /tmp/ss-install-moodle-core /var/www/ss-install-moodle-core
cp /tmp/ss-install-mysql /var/www/ss-install-mysql
cp /tmp/ss-install-mysql-config /var/www/ss-install-mysql-config
cp /tmp/ss-install-mysql-core /var/www/ss-install-mysql-core
cp /tmp/ss-install-nginx /var/www/ss-install-nginx
cp /tmp/ss-install-nginx-config /var/www/ss-install-nginx-config
cp /tmp/ss-install-nginx-core /var/www/ss-install-nginx-core
cp /tmp/ss-install-nginx-ssl /var/www/ss-install-nginx-ssl
cp /tmp/ss-install-nginx-openssl /var/www/ss-install-nginx-openssl
cp /tmp/ss-install-nginx-letsencrypt /var/www/ss-install-nginx-letsencrypt
cp /tmp/ss-install-opencart-config /var/www/ss-install-opencart-config
cp /tmp/ss-install-opencart-core /var/www/ss-install-opencart-core
cp /tmp/ss-install-php /var/www/ss-install-php
cp /tmp/ss-install-php-config /var/www/ss-install-php-config
cp /tmp/ss-install-php-core /var/www/ss-install-php-core
cp /tmp/ss-install-postfix /var/www/ss-install-postfix
cp /tmp/ss-install-prestashop-config /var/www/ss-install-prestashop-config
cp /tmp/ss-install-prestashop-core /var/www/ss-install-prestashop-core
cp /tmp/ss-install-redis /var/www/ss-install-redis
cp /tmp/ss-install-ubuntu-bash /var/www/ss-install-ubuntu-bash
cp /tmp/ss-install-ubuntu-crontab /var/www/ss-install-ubuntu-crontab
cp /tmp/ss-install-ubuntu-kernel /var/www/ss-install-ubuntu-kernel
cp /tmp/ss-install-ubuntu-ssh /var/www/ss-install-ubuntu-ssh
cp /tmp/ss-install-ubuntu-swap /var/www/ss-install-ubuntu-swap
cp /tmp/ss-install-ubuntu-users /var/www/ss-install-ubuntu-users
cp /tmp/ss-install-ubuntu-utils /var/www/ss-install-ubuntu-utils
cp /tmp/ss-install-ufw /var/www/ss-install-ufw
cp /tmp/ss-install-ufw-config /var/www/ss-install-ufw-config
cp /tmp/ss-install-ufw-core /var/www/ss-install-ufw-core
cp /tmp/ss-install-wordpress-cli /var/www/ss-install-wordpress-cli
cp /tmp/ss-install-wordpress-config /var/www/ss-install-wordpress-config
cp /tmp/ss-install-wordpress-core /var/www/ss-install-wordpress-core
cp /tmp/ss-install-wordpress-mu-plugins /var/www/ss-install-wordpress-mu-plugins
cp /tmp/ss-maintenance-disable /var/www/ss-maintenance-disable
cp /tmp/ss-maintenance-enable /var/www/ss-maintenance-enable
cp /tmp/ss-monitor /var/www/ss-monitor
cp /tmp/ss-optimize-database /var/www/ss-optimize-database
cp /tmp/ss-overview /var/www/ss-overview
cp /tmp/ss-perms /var/www/ss-perms
cp /tmp/ss-perms-adminer /var/www/ss-perms-adminer
cp /tmp/ss-perms-clamav /var/www/ss-perms-clamav
cp /tmp/ss-perms-craft-config /var/www/ss-perms-craft-config
cp /tmp/ss-perms-craft-core /var/www/ss-perms-craft-core
cp /tmp/ss-perms-magento-config /var/www/ss-perms-magento-config
cp /tmp/ss-perms-magento-core /var/www/ss-perms-magento-core
cp /tmp/ss-perms-mediawiki-config /var/www/ss-perms-mediawiki-config
cp /tmp/ss-perms-mediawiki-core /var/www/ss-perms-mediawiki-core
cp /tmp/ss-perms-moodle-config /var/www/ss-perms-moodle-config
cp /tmp/ss-perms-moodle-core /var/www/ss-perms-moodle-core
cp /tmp/ss-perms-mysql /var/www/ss-perms-mysql
cp /tmp/ss-perms-nginx /var/www/ss-perms-nginx
cp /tmp/ss-perms-nginx-config /var/www/ss-perms-nginx-config
cp /tmp/ss-perms-nginx-core /var/www/ss-perms-nginx-core
cp /tmp/ss-perms-nginx-ssl /var/www/ss-perms-nginx-ssl
# cp /tmp/ss-perms-nginx-openssl /var/www/ss-perms-nginx-openssl
# cp /tmp/ss-perms-nginx-letsencrypt /var/www/ss-perms-nginx-letsencrypt
cp /tmp/ss-perms-opencart-config /var/www/ss-perms-opencart-config
cp /tmp/ss-perms-opencart-core /var/www/ss-perms-opencart-core
cp /tmp/ss-perms-php /var/www/ss-perms-php
cp /tmp/ss-perms-php-config /var/www/ss-perms-php-config
cp /tmp/ss-perms-php-core /var/www/ss-perms-php-core
cp /tmp/ss-perms-postfix /var/www/ss-perms-postfix
cp /tmp/ss-perms-prestashop-config /var/www/ss-perms-prestashop-config
cp /tmp/ss-perms-prestashop-core /var/www/ss-perms-prestashop-core
cp /tmp/ss-perms-redis /var/www/ss-perms-redis
cp /tmp/ss-perms-ubuntu-bash /var/www/ss-perms-ubuntu-bash
cp /tmp/ss-perms-ubuntu-crontab /var/www/ss-perms-ubuntu-crontab
cp /tmp/ss-perms-ubuntu-kernel /var/www/ss-perms-ubuntu-kernel
cp /tmp/ss-perms-ubuntu-ssh /var/www/ss-perms-ubuntu-ssh
cp /tmp/ss-perms-ubuntu-swap /var/www/ss-perms-ubuntu-swap
cp /tmp/ss-perms-ubuntu-users /var/www/ss-perms-ubuntu-users
cp /tmp/ss-perms-ubuntu-utils /var/www/ss-perms-ubuntu-utils
cp /tmp/ss-perms-ufw /var/www/ss-perms-ufw
cp /tmp/ss-perms-ufw-config /var/www/ss-perms-ufw-config
cp /tmp/ss-perms-ufw-core /var/www/ss-perms-ufw-core
cp /tmp/ss-perms-wordpress-cli /var/www/ss-perms-wordpress-cli
cp /tmp/ss-perms-wordpress-config /var/www/ss-perms-wordpress-config
cp /tmp/ss-perms-wordpress-core /var/www/ss-perms-wordpress-core
cp /tmp/ss-perms-wordpress-mu-plugins /var/www/ss-perms-wordpress-mu-plugins
cp /tmp/ss-purge /var/www/ss-purge
cp /tmp/ss-purge-nginx /var/www/ss-purge-nginx
cp /tmp/ss-purge-opcache /var/www/ss-purge-opcache
cp /tmp/ss-purge-redis /var/www/ss-purge-redis
cp /tmp/ss-purge-transients /var/www/ss-purge-transients
cp /tmp/ss-reboot /var/www/ss-reboot
cp /tmp/ss-remote /var/www/ss-remote
cp /tmp/ss-reset-logs /var/www/ss-reset-logs
cp /tmp/ss-reset-password-sftp /var/www/ss-reset-password-sftp
cp /tmp/ss-restart-services /var/www/ss-restart-services
cp /tmp/ss-restart-services-mysql /var/www/ss-restart-services-mysql
cp /tmp/ss-restart-services-nginx /var/www/ss-restart-services-nginx
cp /tmp/ss-restart-services-php /var/www/ss-restart-services-php
cp /tmp/ss-restart-services-redis /var/www/ss-restart-services-redis
cp /tmp/ss-scan-malware /var/www/ss-scan-malware
cp /tmp/ss-sync-staging /var/www/ss-sync-staging
cp /tmp/ss-update /var/www/ss-update
cp /tmp/ss-update-config /var/www/ss-update-config
cp /tmp/ss-update-packages /var/www/ss-update-packages
cp /tmp/ss-worker /var/www/ss-worker

####################################################################################################
#### SS-Worker: Reset Permissions (SlickStack Core Files) ##########################################
####################################################################################################

## SNIPPET: ss-check, ss-perms, ss-worker

## because SlickStack core permissions are critical this is hardcoded in multiple scripts ##
## this ensures that permissions are reset regularly and do not rely on sourcing ##

## make directories ##
mkdir /var/www
mkdir /var/www/cache
mkdir /var/www/cache/nginx
mkdir /var/www/cache/opcache
mkdir /var/www/cache/system
mkdir /var/www/certs
mkdir /var/www/certs/keys
mkdir /var/www/crons
mkdir /var/www/html
mkdir /var/www/html/.well-known
mkdir /var/www/html/.well-known/acme-challenge
mkdir /var/www/logs
mkdir /var/www/meta
mkdir /var/www/sites

## reset permissions ##
chown root:root /var ## must be root:root
chown root:root /var/www ## must be root:root
chown www-data:www-data /var/www/cache ## must be www-data:www-data
chown www-data:www-data /var/www/cache/opcache ## must be www-data:www-data
chown root:root /var/www/certs
chown root:root /var/www/certs/keys
chown root:root /var/www/crons ## must be root:root
chown -R $SFTP_USER:www-data /var/www/html/.well-known
chown www-data:www-data /var/www/logs ## must be www-data:www-data
chown www-data:www-data /var/www/meta ## must be www-data:www-data
chmod 0755 /var/www ## must be 0755
chmod 0775 /var/www/cache ## 6755 should also work
chmod 0755 /var/www/cache/opcache ## 755 should also work
chmod 0755 /var/www/certs ## must be 0755
chmod 0700 /var/www/certs/keys ## must be 0700
chmod 0644 /var/www/certs/*.crt ## must be 0644
chmod 0644 /var/www/certs/*.pem ## must be 0644
chmod 0600 /var/www/certs/keys/*.key ## must be 0600
chmod 0600 /var/www/certs/keys/*.pem ## must be 0600
chmod 0755 /var/www/crons ## must be 0755
chmod 0755 /var/www/html/.well-known ## accessed by server for e.g. Cerbot but also by SFTP user for things like Stripe ##
chmod 0775 /var/www/logs ## 6755 should also work
chmod 0775 /var/www/meta ## 6755 should also work

####################################################################################################
#### SS-Check: Reset Permissions (SS Core Bash Scripts + SS Core Cron Jobs) ########################
####################################################################################################

## SNIPPET: ss-check, ss-worker, ss core cron jobs

## we hardcode this permissions reset snippet into all ss core scripts for redundancy ##
## chmod 0700 means only the root/sudo users can execute the ss core scripts ##

## reset permissions ##
chown root:root /var/www/ss* ## must be root:root
chown root:root /var/www/crons/*cron* ## must be root:root
chmod 0700 /var/www/ss* ## 0700 means root can execute
chmod 0700 /var/www/crons/*cron* ## 0700 means root can execute

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS ##

####################################################################################################
#### SS-Check: Cleanup Temporary Files #############################################################
####################################################################################################

## delete tmp files ##
rm /tmp/ss*
rm /tmp/*cron*

####################################################################################################
#### SS-Check: Touch Timestamp File ################################################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

## script timestamp ##
touch "$TIMESTAMP_SS_CHECK"

####################################################################################################
#### SS-Check: Message (End Script) ################################################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be noticed by sudo users who manually call ss core bash scripts ##

## echo message ##
echo -e "${GREEN}Exiting ss-check: It appears we successfully retrieved latest ss core cron jobs and bash scripts... ${NOCOLOR}"

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://linuxize.com/post/bash-functions/
## Ref: https://stackoverflow.com/questions/6366530/bash-syntax-error-unexpected-end-of-file

## SS_EOF
