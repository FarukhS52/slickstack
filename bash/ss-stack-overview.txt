#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: https://mirrors.slickstack.io/bash/ss-stack-overview.txt ##############################
#### path: /var/www/ss-stack-overview ##############################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Displays a summary of critical SlickStack settings (passwords, domains, etc) #########
#### module version: Ubuntu 22.04 LTS ##############################################################
#### sourced by: ss-install, ss-update-modules #####################################################
#### bash aliases: ss info, ss overview, ss status, ss summary #####################################
####################################################################################################

## source ss-config ##
source /var/www/ss-config

## source ss-functions ##
source /var/www/ss-functions

## BELOW THIS RELIES ON SS-CONFIG AND SS-FUNCTIONS

####################################################################################################
#### TABLE OF CONTENTS (SS-Stack-Overview) #########################################################
####################################################################################################

## this is a brief summary of the different code snippets you will find in this script ##
## each section should be commented so you understand what is being accomplished ##

## A. Touch Timestamp File
## B. Message (Begin Script)
## C. Display Critical SlickStack Settings
## D. Display SSH Key (One Time Only)

####################################################################################################
#### A. SS-Stack-Overview: Touch Timestamp File ####################################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

## script timestamp ##
ss_touch "${TIMESTAMP_SS_STACK_OVERVIEW}"

####################################################################################################
#### B. SS-Stack-Overview: Message (Begin Script) ##################################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be noticed by sudo users who manually call ss core bash scripts ##

## echo message ##
ss_echo "${COLOR_INFO}ss-stack-overview: Displays a summary of critical SlickStack settings... ${COLOR_RESET}"

####################################################################################################
#### C. SS-Stack-Overview: Display Critical SlickStack Settings ####################################
####################################################################################################

## the shell will echo the most important ss-config settings (and beyond) currently used ##
## this allows you to easily copy/paste for your records or for your clients ##

if [[ -f "${PATH_LETSENCRYPT_CERT_FULLCHAIN}" ]]; then
    LETSENCRYPT_STATUS="OK"
 else
    LETSENCRYPT_STATUS="MISSING"
fi

## add more checks like block files exist, which ssl is active etc


## display critical settings ##
ss_echo ""
ss_echo "${COLOR_INFO}################################################################################${COLOR_RESET}"
ss_echo "${COLOR_INFO}#### Here are your SlickStack settings (SS-Stack-Overview) #####################${COLOR_RESET}"
ss_echo "${COLOR_INFO}################################################################################${COLOR_RESET}"
ss_echo ""
ss_echo "${COLOR_WARN}Please copy/paste or take a screenshot of the settings below to share with ${COLOR_RESET}"
ss_echo "${COLOR_WARN}your client, or otherwise keep somewhere safe for your own records. ${COLOR_RESET}"
ss_echo ""
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Current time: ${LIGHTGREEN}${SYSTEM_CURRENT_TIME} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}SlickStack build: ${LIGHTGREEN}${SS_BUILD} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}IPv4: ${LIGHTGREEN}${SYSTEM_IPV4_ADDRESS} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}IPv6: ${LIGHTGREEN}${SYSTEM_IPV6_ADDRESS} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Site TLD: ${LIGHTGREEN}${SITE_TLD} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Site domain: ${LIGHTGREEN}${SITE_DOMAIN} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Site noindex: ${LIGHTGREEN}${SITE_NOINDEX} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Sudo user: ${LIGHTGREEN}${SUDO_USER} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Sudo password: ${LIGHTGREEN}${SUDO_PASSWORD} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}SFTP user: ${LIGHTGREEN}${SFTP_USER} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}SFTP password: ${LIGHTGREEN}${SFTP_PASSWORD} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}SSH/SFTP port: ${LIGHTGREEN}${SSH_PORT} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}SSH keys: ${LIGHTGREEN}${SSH_KEYS} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Staging site: ${LIGHTGREEN}${STAGING_SITE} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Dev site: ${LIGHTGREEN}${DEV_SITE} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Guest user: ${LIGHTGREEN}${GUEST_USER} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Guest password: ${LIGHTGREEN}${GUEST_PASSWORD} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Database name: ${LIGHTGREEN}${DB_NAME} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Database user: ${LIGHTGREEN}${DB_USER} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Database user password: ${LIGHTGREEN}${DB_PASSWORD} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Database admin user: ${LIGHTGREEN}admin@127.0.0.1 ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Database admin user password: ${LIGHTGREEN}${DB_PASSWORD_ROOT} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Database host: ${LIGHTGREEN}${DB_HOST} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Database port: ${LIGHTGREEN}${DB_PORT} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Database prefix: ${LIGHTGREEN}${DB_PREFIX} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}WP Multisite: ${LIGHTGREEN}${WP_MULTISITE} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}WP Multisite subdomains: ${LIGHTGREEN}${WP_MULTISITE_SUBDOMAINS} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}WP Multisite domain mapping: ${LIGHTGREEN}${WP_MULTISITE_DOMAIN_MAPPING} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}CloudFlare API key: ${LIGHTGREEN}${CLOUDFLARE_API_KEY} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}CloudFlare API email: ${LIGHTGREEN}${CLOUDFLARE_API_EMAIL} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Rsync server: ${LIGHTGREEN}${RSYNC_REMOTE_HOST} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Rsync user: ${LIGHTGREEN}${RSYNC_USER} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Rsync password: ${LIGHTGREEN}${RSYNC_PASSWORD} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Swapfile: ${LIGHTGREEN} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Crontab: ${LIGHTGREEN} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}OpenSSL status: ${LIGHTGREEN} ${NOCOLOR}"
ss_echo "${COLOR_INFO}#### ${LIGHTGRAY}Lets Encrypt status: ${LIGHTGREEN}${LETSENCRYPT_STATUS} ${NOCOLOR}"
ss_echo ""

####################################################################################################
#### D. SS-Stack-Overview: Display SSH Key (One Time Only) #########################################
####################################################################################################

## for ease of use this snippet will diplay the generated SSH private key one time only ##
## users are expected to copy and paste this somewhere safe (advanced users only) ##

if [[ "${SSH_KEYS}" == "true" ]] && [[ -f "${PATH_SSH_PRIVATE_KEY_FILE}" ]]; then
    ss_echo ""
    ss_echo "${COLOR_WARN}Below is your private SSH key (copy to your local computer): ${NOCOLOR}"
    ss_echo ""
    cat "${PATH_SSH_PRIVATE_KEY_FILE}"
    ss_echo ""
    ss_echo "${COLOR_WARN}This private key file (id_rsa) will be deleted on next cleanup cycle... COPY IT NOW before it disappears! ${NOCOLOR}"
fi

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://askubuntu.com/questions/560412/displaying-ip-address-on-eth0-interface
## Ref: https://serverfault.com/questions/46645/shell-command-for-getting-ip-address
## Ref: https://stackoverflow.com/questions/15331259/use-awk-to-find-first-occurrence-only-of-string-after-a-delimiter
## Ref: https://stackoverflow.com/questions/6946677/grep-with-quotation-mark
## Ref: https://unix.stackexchange.com/questions/48535/can-grep-return-true-false-or-are-there-alternative-methods

## SS_EOF
