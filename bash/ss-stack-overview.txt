#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: https://mirrors.slickstack.io/bash/ss-stack-overview.txt ##############################
#### path: /var/www/ss-stack-overview ##############################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Displays a brief overview of critical settings (users, passwords, domains, etc) ######
#### module version: Ubuntu 22.04 LTS ##############################################################
#### sourced by: ss-install, ss-update-modules #####################################################
#### bash aliases: ss overview, ss status, ss summary ##############################################
####################################################################################################

## source ss-config ##
source /var/www/ss-config

## source ss-functions ##
source /var/www/ss-functions

## BELOW THIS RELIES ON SS-CONFIG AND SS-FUNCTIONS

####################################################################################################
#### SS-Stack-Overview: Touch Timestamp File #######################################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

## script timestamp ##
touch "${TIMESTAMP_SS_STACK_OVERVIEW}"

####################################################################################################
#### SS-Overview: Message (Begin Script) ###########################################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be noticed by sudo users who manually call ss core bash scripts ##

## echo message ##
echo -e "${COLOR_INFO}Running ss-overview: Displays a brief overview of critical settings (domains, users, passwords, etc)... ${NOCOLOR}"
sleep "$SLEEP_MESSAGE_BEGIN"

####################################################################################################
#### SS-Overview: Display Critical SlickStack Settings #############################################
####################################################################################################

## the shell will echo the most important ss-config settings (and beyond) currently used ##
## this allows you to easily copy/paste for your records or for your clients ##

## display critical ss-config variables ##
echo -e ""
echo -e "${COLOR_INFO}################################################################################${NOCOLOR}"
echo -e "${COLOR_INFO}#### ${LIGHTGRAY}Congrats! Here are your active SlickStack settings: ${COLOR_INFO}#######################${NOCOLOR}"
echo -e "${COLOR_INFO}################################################################################${NOCOLOR}"
echo -e ""
echo -e "${LIGHTGRAY}SlickStack build: ${LIGHTGREEN}${SS_BUILD} ${NOCOLOR}"
echo -e "${LIGHTGRAY}IPv4: ${LIGHTGREEN}${SYSTEM_IPV4_ADDRESS} ${NOCOLOR}"
echo -e "${LIGHTGRAY}IPv6: ${LIGHTGREEN}${SYSTEM_IPV6_ADDRESS} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Site TLD: ${LIGHTGREEN}${SITE_TLD} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Site domain: ${LIGHTGREEN}https://${SITE_DOMAIN} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Site noindex: ${LIGHTGREEN}${SITE_NOINDEX} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Staging site: ${LIGHTGREEN}${STAGING_SITE} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Dev site: ${LIGHTGREEN}${DEV_SITE} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Sudo user: ${LIGHTGREEN}${SUDO_USER} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Sudo password: ${LIGHTGREEN}${SUDO_PASSWORD} ${NOCOLOR}"
echo -e "${LIGHTGRAY}SFTP user: ${LIGHTGREEN}${SFTP_USER} ${NOCOLOR}"
echo -e "${LIGHTGRAY}SFTP password: ${LIGHTGREEN}${SFTP_PASSWORD} ${NOCOLOR}"
echo -e "${LIGHTGRAY}SSH/SFTP port: ${LIGHTGREEN}${SSH_PORT} ${NOCOLOR}"
echo -e "${LIGHTGRAY}SSH keys: ${LIGHTGREEN}${SSH_KEYS} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Database name: ${LIGHTGREEN}${DB_NAME} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Database user: ${LIGHTGREEN}${DB_USER} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Database user password: ${LIGHTGREEN}${DB_PASSWORD} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Database admin user: ${LIGHTGREEN}admin@127.0.0.1 ${NOCOLOR}"
echo -e "${LIGHTGRAY}Database admin user password: ${LIGHTGREEN}${DB_PASSWORD_ROOT} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Database host: ${LIGHTGREEN}${DB_HOST} ${NOCOLOR}"
echo -e "${LIGHTGRAY}Database prefix: ${LIGHTGREEN}${DB_PREFIX} ${NOCOLOR}"
echo -e "${LIGHTGRAY}WP Multisite: ${LIGHTGREEN}${WP_MULTISITE} ${NOCOLOR}"
echo -e "${LIGHTGRAY}WP Multisite subdomains: ${LIGHTGREEN}${WP_MULTISITE_SUBDOMAINS} ${NOCOLOR}"
echo -e "${LIGHTGRAY}WP Multisite domain mapping: ${LIGHTGREEN}${WP_MULTISITE_DOMAIN_MAPPING} ${NOCOLOR}"
echo -e "${LIGHTGRAY}CloudFlare API key: ${LIGHTGREEN}${CLOUDFLARE_API_KEY} ${NOCOLOR}"
echo -e "${LIGHTGRAY}CloudFlare API email: ${LIGHTGREEN}${CLOUDFLARE_API_EMAIL} ${NOCOLOR}"
echo -e ""
echo -e "${COLOR_WARN}NOTE: The SFTP user/password is the default login for dev sites (WP Admin). ${NOCOLOR}"
echo -e ""
echo -e "${COLOR_WARN}PRO TIP: Use the bash alias ${BGYELLOW}ss${COLOR_WARN} to save keystrokes on CLI commands! ${NOCOLOR}"
echo -e ""
echo -e "${BLINK}${COLOR_WARN}Type the word ${BGYELLOW}bash${COLOR_WARN} and hit ENTER to load a new shell session. ${NORMAL}${NOCOLOR}"
echo -e ""

if [[ "${SSH_KEYS}" == "true" ]] && [[ -f "${PATH_SSH_PRIVATE_KEY_FILE}" ]]; then
    echo -e ""
    echo -e "${COLOR_WARN}Below is your private SSH key (copy to your local computer): ${NOCOLOR}"
    echo -e ""
    cat "${PATH_SSH_PRIVATE_KEY_FILE}"
    echo -e ""
    echo -e "${COLOR_WARN}This private key file (id_rsa) will be deleted on next cleanup cycle... COPY IT NOW before it disappears! ${NOCOLOR}"
fi

####################################################################################################
#### SS-Overview: Notify If Newer SlickStack Build Exists ##########################################
####################################################################################################

## below we briefly inspect the latest ss-config template from official SlickStack mirrors ##
## if it appears that the local server is outdated then a message with appear here ##

## delete leftover files ##
# rm /tmp/ss-config*

## retrieve latest version of ss-config-sample ##
# wget -qO /tmp/ss-config http://mirrors.slickstack.io/ss-config-sample.txt

## warn if placeholders exist ##
SS_CONFIG_OPTION_PLACEHOLDER="$(grep -c '"@' /var/www/ss-config)"
if [[ "$SS_CONFIG_OPTION_PLACEHOLDER" -gt 0 ]]; then
    echo -e ""
    echo -e "${LIGHTRED}Your ss-config file contains \"@...\" placeholders. Please input values for ${NOCOLOR}"
    echo -e "${LIGHTRED}all incomplete option fields, and then run ss-overview again.${NOCOLOR}"
    echo -e ""
fi

## fix this after fixing wget thing above ##
## ensure latest (retrieved) ss-config build matches current ss-update build ##
# SS_BUILD_LATEST=$(source /tmp/ss-config; echo $SS_BUILD)
# if [[ "$SS_BUILD_LATEST" != "$SS_BUILD" ]]; then
 #   echo -e ""
 #   echo -e "${YELLOW}It appears that a newer SlickStack build is available! We recommend you ${NOCOLOR}"
 #   echo -e "${YELLOW}run ss-update to benefit from the latest features and patches.${NOCOLOR}"
 #   echo -e ""
# fi

## warning in case of sub-subdomains in use ##
if [[ $SITE_DOMAIN = *.*.*.* ]]; then
    echo -e ""
    echo -e "${YELLOW}It appears your site is a sub-subdomain so CloudFlare's free SSL will not ${NOCOLOR}"
    echo -e "${YELLOW}resolve (please either upgrade to Cloudflare's premium SSL options, or ${NOCOLOR}"
    echo -e "${YELLOW}otherwise use Let's Encrypt SSL on this server).${NOCOLOR}"
    echo -e ""
fi

## delete leftover files ##
rm /tmp/ss-config*

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://askubuntu.com/questions/560412/displaying-ip-address-on-eth0-interface
## Ref: https://serverfault.com/questions/46645/shell-command-for-getting-ip-address
## Ref: https://stackoverflow.com/questions/15331259/use-awk-to-find-first-occurrence-only-of-string-after-a-delimiter
## Ref: https://stackoverflow.com/questions/6946677/grep-with-quotation-mark
## Ref: https://unix.stackexchange.com/questions/48535/can-grep-return-true-false-or-are-there-alternative-methods

## SS_EOF
