#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: http://mirrors.slickstack.io/10-cron-weekly.txt #######################################
#### path: /var/www/10-cron-weekly #################################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: SlickStack cron job *weekly* (10/13) will run every 1 week ###########################
#### module version: Ubuntu 20.04 LTS ##############################################################
####################################################################################################

## NEVER MODIFY THE SLICKSTACK CRONTAB AND CRON JOBS OR YOUR STACK WILL LOSE FUCTIONALITY ##
## INSTEAD YOU CAN MODIFY INTERVAL SETTINGS IN SS-CONFIG OR CUSTOMIZE SS-CUSTOM ##

## include SlickStack configuration ##
source /var/www/ss-config

## include SlickStack functions ##
source /var/www/ss-functions

####################################################################################################
#### SlickStack: Ensure SS-Check + SS-Worker (Core Scripts) Exist ##################################
####################################################################################################

## this snippet improves redundancy by having Core Crons ensure that Core Scripts exist ##
## additionally the root Crontab in SlickStack ensures that Core Crons exist too ##

## ensure ss-check intact ##
FILE_SS_CHECK="/var/www/ss-check"
STRING_SS_CHECK="SS_CHECK_EOF"
if [[ ! -f "$FILE_SS_CHECK" ]] || [[ -z $(grep -q "$STRING_SS_CHECK" "$FILE_SS_CHECK") ]]; then
    ## delete temp files ##
    rm /tmp/ss-check*
    ## download latest versions ##
    wget -O /tmp/ss-check http://mirrors.slickstack.io/ss-check.txt
    ## copy files to their destinations ##
    cp /tmp/ss-check /var/www/ss-check
    ## reset permissions ##
    chown root:root /var/www/ss-check
    chmod 6770 /var/www/ss-check
    ## delete temp files ##
    rm /tmp/ss-check*
fi

## ensure ss-worker intact ##
FILE_SS_WORKER="/var/www/ss-worker"
STRING_SS_WORKER="SS_EOF"
if [[ ! -f "$FILE_SS_WORKER" ]] || [[ -z $(grep -q "$STRING_SS_WORKER" "$FILE_SS_WORKER") ]]; then
    ## delete temp files ##
    rm /tmp/ss-worker*
    ## download latest versions ##
    wget -O /tmp/ss-worker http://mirrors.slickstack.io/ss-worker.txt
    ## copy files to their destinations ##
    cp /tmp/ss-worker /var/www/ss-worker
    ## reset permissions ##
    chown root:root /var/www/ss-worker
    chmod 6770 /var/www/ss-worker
    ## delete temp files ##
    rm /tmp/ss-worker*
fi

####################################################################################################
#### Cron Job (Weekly): Run Scheduled Tasks ########################################################
####################################################################################################

## the below tasks will be called if configured to run at this interval in ss-config ##
## certain tasks are automatically called if the relevant interval is missing ##

## run ss-clean if set to weekly ##
if [[ "$SS_INTERVAL_CLEAN" == "weekly" ]]; then 
    source /var/www/ss-clean
fi

## run ss-install-wordpress-core if set to weekly ##
if [[ "$SS_INTERVAL_INSTALL_WORDPRESS_CORE" == "weekly" || -z "$SS_INTERVAL_INSTALL_WORDPRESS_CORE" ]]; then 
    source /var/www/ss-install-wordpress-core
fi

## run ss-install-wpconfig if set to weekly or if not defined (default) ##
if [[ "$SS_INTERVAL_INSTALL_WPCONFIG" == "weekly" || -z "$SS_INTERVAL_INSTALL_WPCONFIG" ]]; then 
    source /var/www/ss-install-wordpress-config
fi

## run ss-dos2unix if set to weekly ##
if [[ "$SS_INTERVAL_DOS2UNIX" == "weekly" ]]; then 
    source /var/www/ss-dos2unix
fi

## run ss-scan if set to weekly or if not defined (default) ##
if [[ "$SS_INTERVAL_SCAN" == "weekly" || -z "$SS_INTERVAL_SCAN" ]]; then 
    source /var/www/ss-scan
fi

## run ss-optimize if set to weekly or if not defined (default) ##
if [[ "$SS_INTERVAL_OPTIMIZE" == "weekly" || -z "$SS_INTERVAL_OPTIMIZE" ]]; then 
    source /var/www/ss-optimize
fi

## run ss-install-php if set to weekly ##
if [[ "$SS_INTERVAL_INSTALL_PHP" == "weekly" ]]; then 
    source /var/www/ss-install-php
fi

## run ss-install-nginx if set to weekly ##
if [[ "$SS_INTERVAL_INSTALL_NGINX" == "weekly" ]]; then 
    source /var/www/ss-install-nginx
fi

## run ss-encrypt if not defined ##
if [[ "$SS_INTERVAL_ENCRYPT" == "weekly" ]]; then 
    source /var/www/ss-encrypt
fi

## run ss-install-adminer if set to weekly ##
if [[ "$SS_INTERVAL_INSTALL_ADMINER" == "weekly" ]]; then 
    source /var/www/ss-install-adminer
fi

## run ss-purge if set to weekly ##
if [[ "$SS_INTERVAL_PURGE" == "weekly" ]]; then 
    source /var/www/ss-purge
fi

## run ss-install-cron if set to weekly ##
if [[ "$SS_INTERVAL_INSTALL_CRON" == "weekly" || "$SS_INTERVAL_INSTALL_UBUNTU_CRONTAB" == "weekly" ]]; then 
    source /var/www/ss-install-ubuntu-crontab
fi

####################################################################################################
#### Core Cron Jobs: Ensure Correct Permissions For Core Bash Scripts ##############################
####################################################################################################

## SNIPPET: (core cron jobs)

## ensure correct permissions ##
chown root:root /var/www/ss* ## must be root:root
chmod 0740 /var/www/ss* ## 0700 is enough

## delete lock files ##
rm /tmp/10-cron-weekly*.lock*

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref:

## SS_EOF
